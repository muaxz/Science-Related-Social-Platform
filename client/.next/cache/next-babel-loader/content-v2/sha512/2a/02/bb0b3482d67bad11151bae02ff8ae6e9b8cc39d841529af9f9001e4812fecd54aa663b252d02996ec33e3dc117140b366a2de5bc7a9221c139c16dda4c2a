{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\pages\\\\Profile\\\\Editwindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CameraAlt } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport Iconextra from \"../../UI/Icon\";\nimport { ArrowDropUp, Email, Lock, Notifications } from \"@material-ui/icons\";\nimport { Black, Porfileimage } from \"../../styledcomponents/button\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Cropper from \"react-image-crop\";\nimport axios from 'axios';\nimport \"react-image-crop/dist/ReactCrop.css\";\nconst Exterior = styled.div.withConfig({\n  displayName: \"Editwindow__Exterior\",\n  componentId: \"sc-9h7al1-0\"\n})([\"display:\", \";position:absolute;transform:translateX(-50%);left:50%;top:\", \";;max-width:600px;width:90%;height:\", \";background-color:white;border-radius:10px;z-index:1000;overflow:\", \";;\"], ({\n  active\n}) => active ? \"block\" : \"none\", ({\n  getcropper\n}) => getcropper ? \"150px\" : \"70px\", ({\n  getcropper\n}) => getcropper ? \"350px\" : \"580px\", ({\n  getcropper\n}) => getcropper ? \"visible\" : \"auto\");\nconst Inner = styled.div.withConfig({\n  displayName: \"Editwindow__Inner\",\n  componentId: \"sc-9h7al1-1\"\n})([\"position:relative;padding:10px;\"]);\nconst Holderforupicon = styled.div.withConfig({\n  displayName: \"Editwindow__Holderforupicon\",\n  componentId: \"sc-9h7al1-2\"\n})([\"position:absolute;transition-duration:0.5s;top:-45px;left:\", \";\"], ({\n  slipvalue\n}) => {\n  if (slipvalue == 1) {\n    return \"35px\";\n  } else if (slipvalue == 2) {\n    return \"200px\";\n  } else {\n    return \"400px\";\n  }\n});\nconst Background = styled.div.withConfig({\n  displayName: \"Editwindow__Background\",\n  componentId: \"sc-9h7al1-3\"\n})([\"display:flex;cursor:pointer;justify-content:center;align-items:center;width:100%;border-top-left-radius:10px;border-top-right-radius:10px;height:200px;opacity:0.8;background-image:url(\", \");background-size:cover;background-repeat:no-repeat;background-position:center;transition:0.4s;&:hover{opacity:1;}\"], ({\n  ImageforBack\n}) => ImageforBack);\nconst ProfileImageholder = styled.div.withConfig({\n  displayName: \"Editwindow__ProfileImageholder\",\n  componentId: \"sc-9h7al1-4\"\n})([\"position:absolute;top:160px;opacity:0.8;left:30px;transition:0.4s;&:hover{opacity:1;}\"]);\nconst Inputholder = styled.div.withConfig({\n  displayName: \"Editwindow__Inputholder\",\n  componentId: \"sc-9h7al1-5\"\n})([\"display:\", \";margin-top:20px;\"], ({\n  displayed\n}) => displayed ? \"block\" : \"none\");\nconst Information = styled.div.withConfig({\n  displayName: \"Editwindow__Information\",\n  componentId: \"sc-9h7al1-6\"\n})([\"position:relative;padding-top:\", \";background-color:#e9ecef;padding-left:20px;padding-right:20px;padding-bottom:20px;border-radius:20px;\"], ({\n  isforedit\n}) => isforedit ? \"10px\" : \"80px\");\nconst Labelimage = styled.label.withConfig({\n  displayName: \"Editwindow__Labelimage\",\n  componentId: \"sc-9h7al1-7\"\n})([\"position:absolute;width:100%;height:200px;display:block;padding:6px;padding-left:45px;background-color:white;cursor:pointer;color:black;opacity:0;\"]); //selection bar for editing\n\nconst Selectionbar = styled.div.withConfig({\n  displayName: \"Editwindow__Selectionbar\",\n  componentId: \"sc-9h7al1-8\"\n})([\"display:flex;justify-content:space-around;height:30px;margin-bottom:40px;\"]);\nconst Childsofselection = styled.div.withConfig({\n  displayName: \"Editwindow__Childsofselection\",\n  componentId: \"sc-9h7al1-9\"\n})([\"background-color:\", \";display:flex;align-items:center;justify-content:center;border-radius:50%;width:38px;height:38px;cursor:pointer;transition-duration:0.18s;padding:5px;&:hover{width:44px;height:44px;}\"], ({\n  innercolor\n}) => innercolor ? \"white\" : \"#ff0a54\"); //email,password,notification\n\nexport default function Editwindow({\n  isWindowforedit,\n  updatefunc,\n  active,\n  editdata,\n  closefunc\n}) {\n  console.log(editdata);\n  const {\n    0: file,\n    1: setfile\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: crop,\n    1: setcrop\n  } = useState({\n    aspect: 16 / 16,\n    height: 200,\n    width: 100,\n    x: 50,\n    y: 50\n  });\n  const {\n    0: src,\n    1: setsrc\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: imagetype,\n    1: setimagetype\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setimage\n  } = useState(null);\n  const {\n    0: result,\n    1: setresult\n  } = useState({\n    Backimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    },\n    Profileimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    }\n  });\n  const {\n    0: iscropperactive,\n    1: setcropperactive\n  } = useState(false);\n  const {\n    0: userinfo,\n    1: setuserinfo\n  } = useState({\n    musername: {\n      activate: isWindowforedit ? false : true,\n      value: editdata.username,\n      label: \"Kullanici Adi\",\n      warning: false,\n      multiline: false,\n      msg: \"\"\n    },\n    firstname: {\n      activate: isWindowforedit ? false : true,\n      value: editdata.firstname,\n      label: \"Ad\",\n      warning: false,\n      multiline: false,\n      msg: \"\"\n    },\n    surname: {\n      activate: isWindowforedit ? false : true,\n      value: editdata.lastname,\n      label: \"Soyad\",\n      warning: false,\n      multiline: false,\n      msg: \"\"\n    },\n    personaltext: {\n      activate: isWindowforedit ? false : true,\n      value: editdata.Personaltext,\n      label: \"Kisisel Bilgiler\",\n      warning: false,\n      multiline: true,\n      msg: \"\"\n    },\n    email: {\n      activate: isWindowforedit ? true : false,\n      value: editdata.email,\n      label: \"E-Posta\",\n      warning: false,\n      multiline: false,\n      msg: \"E-postani degistirmek istersen, yeni girdigin adrese bir kod gonderilicek lutfen onu gir.\"\n    }\n  });\n  const {\n    0: selectionchilds,\n    1: setselectionchilds\n  } = useState({\n    Email: true,\n    Password: false,\n    Notification: false\n  });\n  const {\n    0: selected,\n    1: setselected\n  } = useState(1);\n  useEffect(() => {\n    const copy = _objectSpread({}, userinfo);\n\n    for (const key in copy) {\n      copy[key].activate = isWindowforedit ? false : true;\n\n      if (copy[key].label == \"E-Posta\") {\n        copy[key].activate = isWindowforedit ? true : false;\n      }\n    }\n\n    setuserinfo(copy);\n  }, [isWindowforedit]);\n  useEffect(() => {\n    setcropperactive(false);\n  }, [active]);\n  /*\r\n  useEffect(()=>{\r\n       if(src.Backimage !== \"\"){\r\n         console.log(\"heyyo\")\r\n          const backimg = document.querySelector(\"#Backimg\")\r\n          backimg.addEventListener(\"load\",()=>{\r\n              setimage(backimg)\r\n              console.log(backimg)\r\n          })\r\n     }    \r\n    },[src])\r\n  */\n\n  const ToCanvas = async () => {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const base64Image = canvas.toDataURL(\"imge/png\");\n    setresult(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [imagetype]: {\n          src: base64Image,\n          cropvalues: {\n            x: crop.x,\n            y: crop.y,\n            width: crop.width,\n            height: crop.height\n          }\n        }\n      });\n    });\n    setcropperactive(false);\n  };\n\n  const Inputhandler = (key, event) => {\n    const mutated = _objectSpread({}, userinfo);\n\n    mutated[key].value = event.target.value;\n    setuserinfo(mutated);\n  };\n\n  const Updatefile = (event, type) => {\n    if (type == \"Backimage\") {\n      setcrop({\n        aspect: 16 / 9,\n        height: 200,\n        width: 300,\n        unit: \"px\",\n        x: 0,\n        y: 50\n      });\n    } else {\n      setcrop({\n        aspect: 16 / 16,\n        height: 200,\n        width: 200,\n        unit: \"px\",\n        x: 50,\n        y: 50\n      });\n    }\n\n    setimagetype(type);\n    setcropperactive(true);\n    setsrc(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: URL.createObjectURL(event.target.files[0])\n      });\n    });\n    setfile(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: event.target.files[0]\n      });\n    });\n  };\n\n  const updatecrop = newcrop => {\n    //buraya bak\n    if (crop.aspect > 1) {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y\n        });\n      });\n    } else {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y,\n          x: newcrop.x\n        });\n      });\n    }\n\n    console.log(crop); //value of cropper width height x and y\n  };\n\n  const Sendupdates = async () => {\n    const values = {};\n\n    for (const key in userinfo) {\n      values[key] = userinfo[key].value;\n    }\n\n    values.backcrop = result.Backimage.cropvalues;\n    values.profile = result.Profileimage.cropvalues;\n    const formData = new FormData();\n\n    if (file.Backimage !== \"\" && file.Profileimage !== \"\") {\n      formData.append(\"upload\", file.Backimage);\n      formData.append(\"upload2\", file.Profileimage);\n    } else {\n      formData.append(\"upload\", file[imagetype]);\n    }\n\n    formData.append(\"Profilevalues\", JSON.stringify(values));\n\n    try {\n      await axios.post(`user/updateprofile`, formData, {\n        withCredentials: true\n      });\n    } catch (err) {\n      return console.log(\"UPLOAD ERRORRRRRRR\");\n    }\n  };\n\n  const Selectionhandler = (keyname, index) => {\n    const copy = _objectSpread({}, selectionchilds);\n\n    for (const key in copy) {\n      copy[key] = false;\n    }\n\n    copy[keyname] = true;\n    setselected(index + 1);\n    setselectionchilds(copy);\n  };\n\n  const Iconcreater = keyname => {\n    if (keyname == \"Email\") return /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 16\n    }, this);\n    if (keyname == \"Password\") return /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 16\n    }, this);\n    if (keyname == \"Notification\") return /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Black, {\n      onClick: closefunc,\n      aktif: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Backimg\",\n      src: src[\"Backimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Profileimg\",\n      src: src[\"Profileimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Exterior, {\n      getcropper: iscropperactive,\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Inner, {\n        children: [/*#__PURE__*/_jsxDEV(Selectionbar, {\n          children: Object.keys(selectionchilds).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Childsofselection, {\n              innercolor: selectionchilds[item],\n              style: {\n                color: selectionchilds[item] ? \"#ff0a54\" : \"white\"\n              },\n              onClick: () => Selectionhandler(item, index),\n              children: Iconcreater(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this), iscropperactive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Cropper, {\n            onImageLoaded: img => setimage(img),\n            style: {\n              backgroundColor: \"red\",\n              height: \"350px\",\n              width: \"300px\"\n            },\n            imageStyle: {\n              height: \"350px\",\n              width: \"300px\",\n              objectFit: \"cover\"\n            },\n            src: src[imagetype],\n            crop: crop,\n            onChange: newcrop => updatecrop(newcrop)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => ToCanvas(),\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Upload the file to server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!isWindowforedit && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Background, {\n              ImageforBack: src.Backimage,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: \"absolute\",\n                  top: \"225px\",\n                  right: \"10px\",\n                  zIndex: \"1000\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => Sendupdates(),\n                  style: {\n                    textTransform: \"capitalize\",\n                    borderRadius: \"25px\"\n                  },\n                  color: \"secondary\",\n                  variant: \"contained\",\n                  children: \"Kaydet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Labelimage, {\n                htmlFor: \"file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => Updatefile(e, \"Backimage\"),\n                name: \"upload\",\n                accept: \"image/png, image/gif, image/jpeg\",\n                id: \"file\",\n                type: \"file\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(ProfileImageholder, {\n              children: /*#__PURE__*/_jsxDEV(Porfileimage, {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                },\n                width: \"80px\",\n                height: \"80px\",\n                profile: src.Profileimage,\n                children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n                  htmlFor: \"file2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => Updatefile(e, \"Profileimage\"),\n                  accept: \"image/png, image/gif, image/jpeg\",\n                  id: \"file2\",\n                  type: \"file\",\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Information, {\n            isforedit: isWindowforedit,\n            children: [/*#__PURE__*/_jsxDEV(Holderforupicon, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDropUp, {\n                style: {\n                  fontSize: \"80px\",\n                  color: \"#e9ecef\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 37\n            }, this), Object.keys(userinfo).map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Inputholder, {\n                displayed: userinfo[item].activate,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: userinfo[item].multiline,\n                  rows: 4,\n                  onChange: e => Inputhandler(item, e),\n                  style: {\n                    width: \"100%\"\n                  },\n                  label: userinfo[item].label,\n                  variant: \"outlined\",\n                  value: userinfo[item].value,\n                  helperText: userinfo[item].msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 53\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/pages/Profile/Editwindow.js"],"names":["CameraAlt","React","useState","useEffect","styled","Iconextra","ArrowDropUp","Email","Lock","Notifications","Black","Porfileimage","TextField","Button","Cropper","axios","Exterior","div","active","getcropper","Inner","Holderforupicon","slipvalue","Background","ImageforBack","ProfileImageholder","Inputholder","displayed","Information","isforedit","Labelimage","label","Selectionbar","Childsofselection","innercolor","Editwindow","isWindowforedit","updatefunc","editdata","closefunc","console","log","file","setfile","Backimage","Profileimage","crop","setcrop","aspect","height","width","x","y","src","setsrc","imagetype","setimagetype","image","setimage","result","setresult","cropvalues","iscropperactive","setcropperactive","userinfo","setuserinfo","musername","activate","value","username","warning","multiline","msg","firstname","surname","lastname","personaltext","Personaltext","email","selectionchilds","setselectionchilds","Password","Notification","selected","setselected","copy","key","ToCanvas","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","base64Image","toDataURL","prev","Inputhandler","event","mutated","target","Updatefile","type","unit","URL","createObjectURL","files","updatecrop","newcrop","res","Sendupdates","values","backcrop","profile","formData","FormData","append","JSON","stringify","post","withCredentials","err","Selectionhandler","keyname","index","Iconcreater","visibility","position","Object","keys","map","item","color","textAlign","img","backgroundColor","objectFit","top","right","zIndex","textTransform","borderRadius","e","display","justifyContent","alignItems","fontSize"],"mappings":"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","sourcesContent":["import { CameraAlt } from '@material-ui/icons'\r\nimport React, { useState,useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport Iconextra from \"../../UI/Icon\"\r\nimport {ArrowDropUp,Email,Lock,Notifications} from \"@material-ui/icons\"\r\nimport {Black,Porfileimage} from \"../../styledcomponents/button\"\r\nimport {TextField,Button} from \"@material-ui/core\"\r\nimport Cropper from  \"react-image-crop\"\r\nimport axios from 'axios'\r\nimport \"react-image-crop/dist/ReactCrop.css\"\r\n\r\nconst Exterior = styled.div`\r\ndisplay:${({active})=>active ? \"block\" : \"none\"};\r\nposition:absolute;\r\ntransform:translateX(-50%);\r\nleft:50%;\r\ntop:${({getcropper})=>getcropper ? \"150px\" : \"70px\"};;\r\nmax-width:600px;\r\nwidth:90%;\r\nheight:${({getcropper})=>getcropper ? \"350px\" : \"580px\"};\r\nbackground-color:white;\r\nborder-radius:10px;\r\nz-index:1000;\r\noverflow:${({getcropper})=>getcropper ? \"visible\" : \"auto\"};;\r\n`\r\nconst Inner = styled.div`\r\nposition:relative;\r\npadding:10px;\r\n`\r\n\r\nconst Holderforupicon = styled.div`\r\nposition:absolute;\r\ntransition-duration:0.5s;\r\ntop:-45px;\r\nleft:${({slipvalue})=>{\r\n    if(slipvalue == 1){\r\n        return \"35px\"\r\n    }else if(slipvalue == 2){\r\n        return \"200px\"\r\n    }else{\r\n        return \"400px\"\r\n    }\r\n}};\r\n`\r\n\r\nconst Background = styled.div`\r\ndisplay:flex;\r\ncursor:pointer;\r\njustify-content:center;\r\nalign-items:center;\r\nwidth:100%;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\nheight:200px;\r\nopacity:0.8;\r\nbackground-image:url(${({ImageforBack})=>ImageforBack});\r\nbackground-size:cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position:center; \r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\n\r\nconst ProfileImageholder=styled.div`\r\nposition:absolute;\r\ntop:160px;\r\nopacity:0.8;\r\nleft:30px;\r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\nconst Inputholder = styled.div`\r\ndisplay:${({displayed})=> displayed ? \"block\" : \"none\"};\r\nmargin-top:20px;\r\n`\r\nconst Information = styled.div`\r\nposition:relative;\r\npadding-top:${({isforedit})=>isforedit ? \"10px\" : \"80px\"};\r\nbackground-color:#e9ecef;\r\npadding-left:20px;\r\npadding-right:20px; \r\npadding-bottom:20px;\r\nborder-radius:20px;\r\n`\r\n\r\nconst Labelimage=styled.label`\r\nposition:absolute;\r\nwidth:100%;\r\nheight:200px;\r\ndisplay:block;\r\npadding:6px;\r\npadding-left:45px;\r\nbackground-color:white;\r\ncursor:pointer;\r\ncolor:black;\r\nopacity:0;\r\n`\r\n//selection bar for editing\r\nconst Selectionbar = styled.div`\r\ndisplay:flex;\r\njustify-content:space-around;\r\nheight:30px;\r\nmargin-bottom:40px;\r\n`\r\n\r\nconst Childsofselection = styled.div`\r\nbackground-color:${({innercolor})=>innercolor ? \"white\" : \"#ff0a54\"};\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nborder-radius:50%;\r\nwidth:38px;\r\nheight:38px;\r\ncursor:pointer;\r\ntransition-duration:0.18s;\r\npadding:5px;\r\n&:hover{\r\n    width:44px;\r\n    height:44px;\r\n}\r\n`\r\n\r\n//email,password,notification\r\nexport default function Editwindow({isWindowforedit,updatefunc,active,editdata,closefunc}){\r\n\r\n    console.log(editdata)\r\n    const [file,setfile] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [crop,setcrop] = useState({aspect:16/16,height:200,width:100,x:50,y:50})\r\n    const [src,setsrc] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [imagetype,setimagetype] = useState(\"\")\r\n    const [image,setimage] = useState(null)\r\n    const [result,setresult] = useState({\r\n        Backimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        },\r\n        Profileimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        }\r\n    })\r\n    const [iscropperactive,setcropperactive] = useState(false)\r\n    const [userinfo,setuserinfo] = useState({\r\n        musername:{\r\n            activate:isWindowforedit ? false : true,\r\n            value:editdata.username,\r\n            label:\"Kullanici Adi\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\"\r\n        },\r\n        firstname:{\r\n            activate:isWindowforedit ? false : true,\r\n            value:editdata.firstname,\r\n            label:\"Ad\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\"\r\n        },\r\n        surname:{\r\n            activate:isWindowforedit ? false : true,\r\n            value:editdata.lastname,\r\n            label:\"Soyad\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\"\r\n        },\r\n        personaltext:{\r\n            activate:isWindowforedit ? false : true,\r\n            value:editdata.Personaltext,\r\n            label:\"Kisisel Bilgiler\",\r\n            warning:false,\r\n            multiline:true,\r\n            msg:\"\"\r\n        },\r\n        email:{\r\n            activate:isWindowforedit ? true : false,\r\n            value:editdata.email,\r\n            label:\"E-Posta\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"E-postani degistirmek istersen, yeni girdigin adrese bir kod gonderilicek lutfen onu gir.\"\r\n        },\r\n      \r\n    })\r\n    const [selectionchilds,setselectionchilds] = useState({\r\n        Email:true,\r\n        Password:false,\r\n        Notification:false\r\n    })\r\n    const [selected,setselected] = useState(1)\r\n\r\n    useEffect(()=>{\r\n\r\n        const copy = {...userinfo}\r\n      \r\n        for (const key in copy){\r\n            copy[key].activate = isWindowforedit ? false : true\r\n            if(copy[key].label == \"E-Posta\"){\r\n                    copy[key].activate = isWindowforedit ? true : false\r\n            }\r\n        }\r\n\r\n        setuserinfo(copy)\r\n      \r\n    },[isWindowforedit])\r\n\r\n    useEffect(()=>{\r\n        setcropperactive(false)\r\n    },[active])\r\n    /*\r\n    useEffect(()=>{\r\n\r\n       if(src.Backimage !== \"\"){\r\n           console.log(\"heyyo\")\r\n            const backimg = document.querySelector(\"#Backimg\")\r\n            backimg.addEventListener(\"load\",()=>{\r\n                setimage(backimg)\r\n                console.log(backimg)\r\n            })\r\n       }    \r\n\r\n    },[src])\r\n    */\r\n\r\n    const ToCanvas = async ()=>{\r\n       \r\n        const canvas = document.createElement(\"canvas\");\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width\r\n        canvas.height = crop.height\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        \r\n    \r\n        ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        crop.width,\r\n        crop.height\r\n        );\r\n        \r\n        const base64Image = canvas.toDataURL(\"imge/png\")\r\n\r\n        setresult((prev)=>{\r\n            return {...prev,[imagetype]:{src:base64Image,cropvalues:{x:crop.x,y:crop.y,width:crop.width,height:crop.height}}}\r\n        })\r\n\r\n        setcropperactive(false)\r\n        \r\n    }\r\n\r\n    const Inputhandler = (key,event)=>{\r\n\r\n        const mutated = {...userinfo}\r\n        mutated[key].value=event.target.value\r\n        setuserinfo(mutated)\r\n    }\r\n\r\n    const Updatefile = (event,type)=>{\r\n\r\n        if(type == \"Backimage\"){\r\n            setcrop({\r\n                aspect:16/9,\r\n                height:200,\r\n                width:300,\r\n                unit:\"px\",\r\n                x:0,\r\n                y:50\r\n            })\r\n        }\r\n        else{\r\n            setcrop({\r\n                aspect:16/16,\r\n                height:200,\r\n                width:200,\r\n                unit:\"px\",\r\n                x:50,\r\n                y:50\r\n            })\r\n        }\r\n        \r\n        setimagetype(type)\r\n        setcropperactive(true)\r\n        setsrc((prev)=>{\r\n            return {...prev,[type]:URL.createObjectURL(event.target.files[0])}\r\n        })\r\n        setfile((prev)=>{\r\n            return {...prev,[type]:event.target.files[0]}\r\n        })\r\n\r\n      \r\n    }\r\n\r\n    const updatecrop = (newcrop)=>{\r\n        //buraya bak\r\n        if(crop.aspect > 1){\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y}\r\n            })\r\n        }\r\n        else{\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y,x:newcrop.x}\r\n            })\r\n        }\r\n        console.log(crop)\r\n\r\n        //value of cropper width height x and y\r\n    }\r\n\r\n    const Sendupdates = async ()=>{\r\n\r\n        const values = {}\r\n        for (const key in userinfo){\r\n            values[key] = userinfo[key].value\r\n        }\r\n\r\n        values.backcrop = result.Backimage.cropvalues\r\n        values.profile  = result.Profileimage.cropvalues\r\n\r\n        const formData=new FormData();\r\n\r\n        if(file.Backimage !== \"\" && file.Profileimage !== \"\"){\r\n\r\n            formData.append(\"upload\",file.Backimage);\r\n            formData.append(\"upload2\",file.Profileimage)\r\n            \r\n        }\r\n        else{\r\n            \r\n            formData.append(\"upload\",file[imagetype])\r\n        }\r\n\r\n        formData.append(\"Profilevalues\",JSON.stringify(values))\r\n        \r\n     \r\n\r\n        try{\r\n\r\n            await axios.post(`user/updateprofile`,formData,{withCredentials:true});\r\n   \r\n         }catch(err){\r\n   \r\n            return console.log(\"UPLOAD ERRORRRRRRR\");\r\n            \r\n         }\r\n\r\n    }\r\n\r\n    const Selectionhandler=(keyname,index)=>{\r\n        const copy = {...selectionchilds}\r\n        for (const key in copy) {\r\n           copy[key] = false\r\n        }\r\n        copy[keyname] = true\r\n        setselected(index+1)\r\n        setselectionchilds(copy)\r\n    }\r\n\r\n    const Iconcreater =(keyname)=>{\r\n        if(keyname == \"Email\")\r\n        return <Email></Email>\r\n        if(keyname == \"Password\")\r\n        return <Lock></Lock>\r\n        if(keyname == \"Notification\")\r\n        return <Notifications></Notifications>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Black onClick={closefunc} aktif={active}/>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Backimg\" src={src[\"Backimage\"]}></img>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Profileimg\" src={src[\"Profileimage\"]}></img>\r\n            <Exterior getcropper={iscropperactive} active={active}>\r\n                <Inner>\r\n                    <Selectionbar>\r\n                        {\r\n                            Object.keys(selectionchilds).map((item,index)=>{\r\n                               return (<Childsofselection innercolor={selectionchilds[item]} style={{color:selectionchilds[item] ? \"#ff0a54\" : \"white\"}} onClick={()=>Selectionhandler(item,index)}>{Iconcreater(item)}</Childsofselection>)\r\n                            })\r\n                        }\r\n                       \r\n                    </Selectionbar>\r\n                    {\r\n                        iscropperactive \r\n                        \r\n                        ? \r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <Cropper  onImageLoaded={(img)=>setimage(img)} style={{backgroundColor:\"red\",height:\"350px\",width:\"300px\"}}  imageStyle={{height:\"350px\",width:\"300px\",objectFit:\"cover\"}}  src={src[imagetype]} crop={crop} onChange={(newcrop)=>updatecrop(newcrop)}/> \r\n                                <div style={{textAlign:\"center\"}}>\r\n                                 <Button onClick={()=>ToCanvas()} color=\"secondary\" variant=\"contained\" >Upload the file to server</Button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        :\r\n\r\n                             (<> \r\n                                    { !isWindowforedit &&  \r\n\r\n                                        (<>\r\n                                            <Background ImageforBack={src.Backimage}>\r\n                                                <div style={{position:\"absolute\",top:\"225px\",right:\"10px\",zIndex:\"1000\"}}>\r\n                                                    <Button onClick={()=>Sendupdates()} style={{textTransform:\"capitalize\",borderRadius:\"25px\"}} color=\"secondary\" variant=\"contained\">Kaydet</Button>\r\n                                                </div>\r\n                                                <Labelimage  htmlFor=\"file\"></Labelimage>\r\n                                                <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                                <input onChange={(e)=>Updatefile(e,\"Backimage\")} name=\"upload\" accept=\"image/png, image/gif, image/jpeg\" id=\"file\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                            </Background>\r\n                                            <ProfileImageholder>\r\n                                                <Porfileimage style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} width=\"80px\" height=\"80px\" profile={src.Profileimage}>\r\n                                                    <Labelimage htmlFor=\"file2\"></Labelimage>\r\n                                                    <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                                    <input onChange={(e)=>Updatefile(e,\"Profileimage\")} accept=\"image/png, image/gif, image/jpeg\" id=\"file2\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                                </Porfileimage>\r\n                                            </ProfileImageholder>\r\n                                        </>)\r\n\r\n                                    }\r\n                                  \r\n                                <Information isforedit={isWindowforedit}>\r\n                                    <Holderforupicon>\r\n                                        <ArrowDropUp style={{fontSize:\"80px\",color:\"#e9ecef\"}}></ArrowDropUp>\r\n                                    </Holderforupicon>\r\n                                    {\r\n                                        Object.keys(userinfo).map((item,index)=>{\r\n\r\n                                            return (<Inputholder displayed={userinfo[item].activate}>\r\n                                                        <TextField   \r\n                                                            multiline={userinfo[item].multiline}\r\n                                                            rows={4}\r\n                                                            onChange={(e)=>Inputhandler(item,e)}\r\n                                                            style={{width:\"100%\"}}\r\n                                                            label={userinfo[item].label}\r\n                                                            variant=\"outlined\"\r\n                                                            value={userinfo[item].value}\r\n                                                            helperText={userinfo[item].msg}\r\n                                                        ></TextField>\r\n                                                </Inputholder>)\r\n                                        })\r\n                                    }\r\n                                </Information>\r\n                        </>)\r\n                    }\r\n                </Inner>\r\n            </Exterior>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}