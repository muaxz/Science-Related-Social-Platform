{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emre\\\\MyProjects\\\\Mynextrepo\\\\client\\\\containers\\\\Layout\\\\routerguard.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useRouter } from \"next/router\";\nimport { createusercontext } from \"../../context/Usercontext\";\nexport default function Routerguard({\n  children\n}) {\n  //homepage\n  const myrouter = useRouter();\n  const {\n    0: controller,\n    1: setcontroller\n  } = useState(false);\n  const {\n    userdata,\n    logged\n  } = useContext(createusercontext);\n  console.log(logged);\n  useEffect(() => {\n    const Token = localStorage.getItem(\"TOKEN\");\n\n    if (userdata.UserId) {\n      if (myrouter.pathname == \"/[userıd]/liked\" || myrouter.pathname == \"/[userıd]/saved\") {\n        if (myrouter.query.userıd == userdata.UserId) {\n          setcontroller(true);\n        } else {\n          myrouter.push(\"/404\");\n        }\n      }\n\n      if (myrouter.pathname == \"/login\") {\n        console.log(logged);\n\n        if (userdata.UserId) {\n          myrouter.push(\"/\");\n        } else {\n          setcontroller(true);\n        }\n      }\n\n      if (myrouter.pathname == \"/profile/[username]/editprofile\") {\n        if (myrouter.query.username == userdata.UserId) {\n          setcontroller(true);\n        } else {\n          myrouter.push(\"/404\");\n        }\n      }\n\n      if (myrouter.pathname == \"/Drafts/[userid]\") {\n        if (myrouter.query.userid == userdata.UserId) {\n          setcontroller(true);\n        } else {\n          myrouter.push(\"/404\");\n        }\n      }\n    }\n  }, [userdata]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: controller ? children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Emre/MyProjects/Mynextrepo/client/containers/Layout/routerguard.js"],"names":["React","useContext","useEffect","useState","useRouter","createusercontext","Routerguard","children","myrouter","controller","setcontroller","userdata","logged","console","log","Token","localStorage","getItem","UserId","pathname","query","userıd","push","username","userid"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAgC;AAC3C;AAEA,QAAMC,QAAQ,GAAGJ,SAAS,EAA1B;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAYC;AAAZ,MAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM;AAACQ,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAoBX,UAAU,CAACI,iBAAD,CAApC;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAI;AAEV,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGN,QAAQ,CAACO,MAAZ,EAAmB;AAEf,UAAGV,QAAQ,CAACW,QAAT,IAAqB,iBAArB,IAA0CX,QAAQ,CAACW,QAAT,IAAqB,iBAAlE,EAAoF;AAEhF,YAAGX,QAAQ,CAACY,KAAT,CAAeC,MAAf,IAAyBV,QAAQ,CAACO,MAArC,EAA4C;AAExCR,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,SAJD,MAKI;AAEAF,UAAAA,QAAQ,CAACc,IAAT,CAAc,MAAd;AACH;AAEJ;;AACD,UAAGd,QAAQ,CAACW,QAAT,IAAqB,QAAxB,EAAiC;AAC7BN,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,YAAGD,QAAQ,CAACO,MAAZ,EAAmB;AAEfV,UAAAA,QAAQ,CAACc,IAAT,CAAc,GAAd;AAEH,SAJD,MAKI;AAEAZ,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH;AAEJ;;AACD,UAAGF,QAAQ,CAACW,QAAT,IAAqB,iCAAxB,EAA0D;AAEtD,YAAGX,QAAQ,CAACY,KAAT,CAAeG,QAAf,IAA2BZ,QAAQ,CAACO,MAAvC,EAA8C;AAE1CR,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,SAJD,MAKI;AAEAF,UAAAA,QAAQ,CAACc,IAAT,CAAc,MAAd;AACH;AAEJ;;AACD,UAAGd,QAAQ,CAACW,QAAT,IAAqB,kBAAxB,EAA2C;AAEvC,YAAGX,QAAQ,CAACY,KAAT,CAAeI,MAAf,IAAyBb,QAAQ,CAACO,MAArC,EAA4C;AAExCR,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,SAJD,MAKI;AAEAF,UAAAA,QAAQ,CAACc,IAAT,CAAc,MAAd;AACH;AAEJ;AAEJ;AAEJ,GA9DQ,EA8DP,CAACX,QAAD,CA9DO,CAAT;AAiEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACMF,UAAU,GAAGF,QAAH,GAAc;AAD9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import React, {useContext, useEffect, useState } from 'react'\r\nimport {useRouter} from \"next/router\"\r\nimport {createusercontext} from \"../../context/Usercontext\"\r\n\r\nexport default function Routerguard({children}){\r\n    //homepage\r\n\r\n    const myrouter = useRouter();\r\n    const [controller,setcontroller]=useState(false);\r\n    const {userdata,logged} = useContext(createusercontext);\r\n\r\n    \r\n    console.log(logged);\r\n\r\n    useEffect(()=>{\r\n     \r\n        const Token = localStorage.getItem(\"TOKEN\");\r\n        \r\n        if(userdata.UserId){\r\n\r\n            if(myrouter.pathname == \"/[userıd]/liked\" || myrouter.pathname == \"/[userıd]/saved\"){\r\n                \r\n                if(myrouter.query.userıd == userdata.UserId){\r\n                    \r\n                    setcontroller(true);\r\n        \r\n                }\r\n                else{\r\n                   \r\n                    myrouter.push(\"/404\");\r\n                }\r\n              \r\n            }\r\n            if(myrouter.pathname == \"/login\"){\r\n                console.log(logged)\r\n                if(userdata.UserId){\r\n                    \r\n                    myrouter.push(\"/\");\r\n\r\n                }\r\n                else{\r\n\r\n                    setcontroller(true);\r\n\r\n                }\r\n                   \r\n            }\r\n            if(myrouter.pathname == \"/profile/[username]/editprofile\"){\r\n\r\n                if(myrouter.query.username == userdata.UserId){\r\n                    \r\n                    setcontroller(true);\r\n        \r\n                }\r\n                else{\r\n                   \r\n                    myrouter.push(\"/404\");\r\n                }\r\n\r\n            }\r\n            if(myrouter.pathname == \"/Drafts/[userid]\"){\r\n\r\n                if(myrouter.query.userid == userdata.UserId){\r\n                    \r\n                    setcontroller(true);\r\n        \r\n                }\r\n                else{\r\n                   \r\n                    myrouter.push(\"/404\");\r\n                }\r\n\r\n            }\r\n            \r\n        }\r\n\r\n    },[userdata])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n             {controller ? children : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}