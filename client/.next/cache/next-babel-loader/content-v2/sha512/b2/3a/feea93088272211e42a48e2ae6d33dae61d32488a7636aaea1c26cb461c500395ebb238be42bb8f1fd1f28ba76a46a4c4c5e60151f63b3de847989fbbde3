{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\pages\\\\Profile\\\\Editwindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CameraAlt } from '@material-ui/icons';\nimport React, { useState, useEffect, useReducer } from 'react';\nimport styled from \"styled-components\";\nimport { ArrowDropUp, Email, Lock, Notifications } from \"@material-ui/icons\";\nimport { Black, Porfileimage } from \"../../styledcomponents/button\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Cropper from \"react-image-crop\";\nimport axios from 'axios';\nimport { UpdateProfile } from \"../../../Api/Api\";\nimport Switch from \"react-switch\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport Validate from \"validator\";\nconst Exterior = styled.div.withConfig({\n  displayName: \"Editwindow__Exterior\",\n  componentId: \"sc-9h7al1-0\"\n})([\"display:\", \";position:absolute;transform:translateX(-50%);left:50%;top:\", \";;max-width:600px;width:90%;height:\", \";background-color:white;border-radius:10px;z-index:1000;overflow:\", \";;\"], ({\n  active\n}) => active ? \"block\" : \"none\", ({\n  getcropper\n}) => getcropper ? \"150px\" : \"70px\", ({\n  getcropper\n}) => getcropper ? \"350px\" : \"580px\", ({\n  getcropper\n}) => getcropper ? \"visible\" : \"auto\");\nconst Inner = styled.div.withConfig({\n  displayName: \"Editwindow__Inner\",\n  componentId: \"sc-9h7al1-1\"\n})([\"position:relative;padding:10px;\"]);\nconst Background = styled.div.withConfig({\n  displayName: \"Editwindow__Background\",\n  componentId: \"sc-9h7al1-2\"\n})([\"display:flex;cursor:pointer;justify-content:center;align-items:center;width:100%;border-top-left-radius:10px;border-top-right-radius:10px;height:200px;opacity:0.8;background-image:url(\", \");background-size:cover;background-repeat:no-repeat;background-position:center;transition:0.4s;&:hover{opacity:1;}\"], ({\n  ImageforBack\n}) => ImageforBack);\nconst ProfileImageholder = styled.div.withConfig({\n  displayName: \"Editwindow__ProfileImageholder\",\n  componentId: \"sc-9h7al1-3\"\n})([\"position:absolute;top:160px;opacity:0.8;left:30px;transition:0.4s;&:hover{opacity:1;}\"]);\nconst Inputholder = styled.div.withConfig({\n  displayName: \"Editwindow__Inputholder\",\n  componentId: \"sc-9h7al1-4\"\n})([\"display:\", \";margin-top:20px;\"], ({\n  displayed\n}) => displayed ? \"block\" : \"none\");\nconst Information = styled.div.withConfig({\n  displayName: \"Editwindow__Information\",\n  componentId: \"sc-9h7al1-5\"\n})([\"position:relative;padding-top:\", \";background-color:\", \";padding-left:20px;padding-right:20px;padding-bottom:20px;border-radius:20px;\"], ({\n  isforedit\n}) => isforedit ? \"10px\" : \"80px\", ({\n  isforedit\n}) => isforedit ? \"#e9ecef\" : \"white\");\nconst Labelimage = styled.label.withConfig({\n  displayName: \"Editwindow__Labelimage\",\n  componentId: \"sc-9h7al1-6\"\n})([\"position:absolute;width:100%;height:200px;display:block;padding:6px;padding-left:45px;background-color:white;cursor:pointer;color:black;opacity:0;\"]); //selection bar for editing\n\nconst Selectionbar = styled.div.withConfig({\n  displayName: \"Editwindow__Selectionbar\",\n  componentId: \"sc-9h7al1-7\"\n})([\"display:flex;justify-content:space-around;height:30px;margin-bottom:40px;\"]);\nconst Childsofselection = styled.div.withConfig({\n  displayName: \"Editwindow__Childsofselection\",\n  componentId: \"sc-9h7al1-8\"\n})([\"position:relative;top:\", \";background-color:\", \";display:flex;align-items:center;justify-content:center;border-radius:50%;width:38px;height:38px;cursor:pointer;transition-duration:0.18s;padding:5px;\"], ({\n  innercolor\n}) => innercolor ? \"10px\" : \"0\", ({\n  innercolor\n}) => innercolor ? \"#7de2d1\" : \"#ff0a54\");\nconst Holderforupicon = styled.div.withConfig({\n  displayName: \"Editwindow__Holderforupicon\",\n  componentId: \"sc-9h7al1-9\"\n})([\"position:absolute;transition-duration:0.3s;top:-45px;left:\", \";\"], ({\n  slipvalue\n}) => {\n  if (slipvalue == 1) {\n    return \"55px\";\n  } else if (slipvalue == 2) {\n    return \"250px\";\n  } else {\n    return \"440px\";\n  }\n}); //email,password,notification\n\nexport default function Editwindow({\n  isWindowforsettings,\n  updatefunc,\n  active,\n  editdata,\n  closefunc\n}) {\n  const {\n    0: file,\n    1: setfile\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: crop,\n    1: setcrop\n  } = useState({\n    aspect: 16 / 16,\n    height: 200,\n    width: 100,\n    x: 50,\n    y: 50\n  });\n  const {\n    0: src,\n    1: setsrc\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: imagetype,\n    1: setimagetype\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setimage\n  } = useState(null);\n  const {\n    0: result,\n    1: setresult\n  } = useState({\n    Backimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    },\n    Profileimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    }\n  });\n  const {\n    0: iscropperactive,\n    1: setcropperactive\n  } = useState(false);\n  const {\n    0: userinfo,\n    1: setuserinfo\n  } = useState({\n    musername: {\n      activate: false,\n      value: editdata.username,\n      label: \"Kullanici Adi\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"\"\n    },\n    firstname: {\n      activate: false,\n      value: editdata.firstname,\n      label: \"Ad\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"\"\n    },\n    surname: {\n      activate: false,\n      value: editdata.lastname,\n      label: \"Soyad\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"\"\n    },\n    personaltext: {\n      activate: false,\n      value: editdata.Personaltext,\n      label: \"Kisisel Bilgiler\",\n      warning: false,\n      multiline: true,\n      msg: \"\",\n      errormsg: \"\"\n    },\n    email: {\n      activate: false,\n      value: editdata.email,\n      label: \"E-Posta\",\n      warning: false,\n      multiline: false,\n      msg: \"E-postani degistirmek istersen, yeni girdigin adrese bir kod gonderilicek lutfen onu gir.\",\n      errormsg: \"Gecerli Bir E-posta adresi girin !\"\n    },\n    Currentpassword: {\n      activate: false,\n      value: \"\",\n      label: \"Eski Sifreniz\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"Eski sifreni yanlis girdin galiba, tekrar dene !\"\n    },\n    Newpassword: {\n      activate: false,\n      value: \"\",\n      label: \"Yeni sifrenizi girin\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"Make sure that your password has at least 6 length and contains one upper, one lower character and one number.\"\n    },\n    ValidationNewpassword: {\n      activate: false,\n      value: \"\",\n      label: \"Yeni sifrenizi tekrar girin\",\n      warning: false,\n      multiline: false,\n      msg: \"\",\n      errormsg: \"Girdiginiz sifreler ayni degil\"\n    },\n    Notifications: {\n      activate: false,\n      value: {\n        Whenfollow: {\n          value: false,\n          msg: \"Biri seni takip ettiginde bildirim al\"\n        },\n        Whenlike: {\n          value: false,\n          msg: \"Biri senin icerigini begendiginde bildirim al\"\n        },\n        Whencomment: {\n          value: false,\n          msg: \"Biri icerigine yorum yaptiginda bildirim al\"\n        }\n      },\n      label: \"\",\n      warning: false,\n      multiline: false,\n      msg: \"\"\n    }\n  });\n  const {\n    0: selectionchilds,\n    1: setselectionchilds\n  } = useState({\n    Email: true,\n    Password: false,\n    Notification: false\n  });\n  const {\n    0: selected,\n    1: setselected\n  } = useState(1);\n  useEffect(() => {\n    const copy = _objectSpread({}, userinfo);\n\n    for (const key in copy) {\n      copy[key].activate = false;\n      console.log(copy[key].activate);\n    }\n\n    if (isWindowforsettings) {\n      if (selected == 1) {\n        copy[\"email\"].activate = true;\n      } else if (selected == 2) {\n        copy[\"Currentpassword\"].activate = true;\n        copy[\"Newpassword\"].activate = true;\n        copy[\"ValidationNewpassword\"].activate = true;\n      } else {\n        //selected 3\n        copy[\"Notifications\"].activate = true;\n      }\n    } else {\n      if (active) {\n        for (const key in copy) {\n          if (key == \"musername\" || key == \"personaltext\" || key == \"firstname\" || key == \"surname\") {\n            copy[key].activate = true;\n          }\n        }\n      }\n    }\n\n    setuserinfo(copy);\n  }, [active, selected]);\n  useEffect(() => {\n    setcropperactive(false);\n  }, [active]);\n  /*\r\n  useEffect(()=>{\r\n       if(src.Backimage !== \"\"){\r\n         console.log(\"heyyo\")\r\n          const backimg = document.querySelector(\"#Backimg\")\r\n          backimg.addEventListener(\"load\",()=>{\r\n              setimage(backimg)\r\n              console.log(backimg)\r\n          })\r\n     }    \r\n    },[src])\r\n  */\n\n  const Inputerrorhandler = (type, value) => {\n    switch (type) {\n      case \"username\":\n        break;\n\n      case \"firstname\":\n        break;\n\n      case \"email\":\n        return Validate.isEmail(value);\n\n      case \"password\":\n        if (value.New !== value.Newvalidation) return {\n          state: \"Unequal\",\n          validate: false\n        };\n        if (!Validate.isStrongPassword(value.New, {\n          minSymbols: 0,\n          minNumbers: 1,\n          minLowercase: 1,\n          minUppercase: 1,\n          minLength: 6,\n          returnScore: false\n        })) return {\n          state: \"Strong\",\n          validate: false\n        };\n        return true;\n      //newpassword character checking\n\n      default:\n        break;\n    }\n  };\n\n  const ToCanvas = async () => {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const base64Image = canvas.toDataURL(\"imge/png\");\n    setresult(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [imagetype]: {\n          src: base64Image,\n          cropvalues: {\n            x: crop.x,\n            y: crop.y,\n            width: crop.width,\n            height: crop.height\n          }\n        }\n      });\n    });\n    setcropperactive(false);\n  };\n\n  const Inputhandler = (key, event, subkey) => {\n    const mutated = _objectSpread({}, userinfo);\n\n    if (key == \"Notifications\") {\n      mutated[key][\"value\"][subkey][\"value\"] = !mutated[key][\"value\"][subkey][\"value\"];\n    } else {\n      mutated[key].value = event.target.value;\n    }\n\n    setuserinfo(mutated);\n  };\n\n  const Updatefile = (event, type) => {\n    if (type == \"Backimage\") {\n      setcrop({\n        aspect: 16 / 9,\n        height: 200,\n        width: 300,\n        unit: \"px\",\n        x: 0,\n        y: 50\n      });\n    } else {\n      setcrop({\n        aspect: 16 / 16,\n        height: 200,\n        width: 200,\n        unit: \"px\",\n        x: 50,\n        y: 50\n      });\n    }\n\n    setimagetype(type);\n    setcropperactive(true);\n    setsrc(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: URL.createObjectURL(event.target.files[0])\n      });\n    });\n    setfile(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: event.target.files[0]\n      });\n    });\n  };\n\n  const updatecrop = newcrop => {\n    //buraya bak\n    if (crop.aspect > 1) {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y\n        });\n      });\n    } else {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y,\n          x: newcrop.x\n        });\n      });\n    }\n\n    console.log(crop); //value of cropper width height x and y\n  };\n\n  const Sendupdates = async typeofupdate => {\n    const values = {};\n\n    const copy = _objectSpread({}, userinfo);\n\n    var updateFor = \"\";\n\n    if (!isWindowforsettings) {\n      updateFor = \"Profile\";\n      values.backcrop = result.Backimage.cropvalues;\n      values.profile = result.Profileimage.cropvalues;\n\n      for (const key in userinfo) {\n        if (key == \"email\") break;\n        values[key] = userinfo[key].value;\n      }\n    } else if (typeofupdate == 1) {\n      updateFor = \"Email\";\n\n      if (!Inputerrorhandler(\"email\", userinfo[\"email\"].value)) {\n        copy[\"email\"].warning = true;\n        copy[\"email\"].msg = \"Gecerli Bir E-posta adresi girin !\";\n        return setuserinfo(copy);\n      }\n\n      values[\"email\"] = userinfo[\"email\"].value;\n    } else if (typeofupdate == 2) {\n      updateFor = \"Password\";\n      const {\n        state,\n        validate\n      } = Inputerrorhandler(\"password\", {\n        Current: userinfo[\"Currentpassword\"].value,\n        New: userinfo[\"Newpassword\"].value,\n        Newvalidation: userinfo[\"ValidationNewpassword\"].value\n      });\n\n      if (!validate) {\n        if (state == \"Unequal\") {\n          copy[\"ValidationNewpassword\"].warning = true;\n        } else {\n          copy[\"Newpassword\"].warning = true;\n        }\n\n        return setuserinfo(copy);\n      }\n\n      values[\"Currentpassword\"] = userinfo[\"Currentpassword\"].value;\n      values[\"Newpassword\"] = userinfo[\"Newpassword\"].value;\n      values[\"NewValidation\"] = userinfo[\"ValidationNewpassword\"].value;\n    } else {\n      updateFor = \"Notification\";\n      values[\"Notifications\"] = userinfo[\"Notifications\"][\"value\"];\n    }\n\n    const formData = new FormData();\n\n    if (file.Backimage !== \"\" && file.Profileimage !== \"\") {\n      formData.append(\"upload\", file.Backimage);\n      formData.append(\"upload2\", file.Profileimage);\n    } else {\n      formData.append(\"upload\", file[imagetype]);\n    }\n\n    formData.append(\"Profilevalues\", JSON.stringify(values));\n    UpdateProfile({\n      userdata: formData,\n      typeofupdate: updateFor\n    });\n  };\n\n  const Selectionhandler = (keyname, index) => {\n    const copy = _objectSpread({}, selectionchilds);\n\n    for (const key in copy) {\n      copy[key] = false;\n    }\n\n    copy[keyname] = true;\n    setselected(index + 1);\n    setselectionchilds(copy);\n  };\n\n  const Iconcreater = keyname => {\n    if (keyname == \"Email\") return /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 16\n    }, this);\n    if (keyname == \"Password\") return /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 16\n    }, this);\n    if (keyname == \"Notification\") return /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Black, {\n      onClick: closefunc,\n      aktif: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Backimg\",\n      src: src[\"Backimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Profileimg\",\n      src: src[\"Profileimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Exterior, {\n      getcropper: iscropperactive,\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Inner, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: isWindowforsettings ? \"500px\" : \"250px\",\n            right: \"40px\",\n            zIndex: \"300\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => Sendupdates(selected),\n            style: {\n              textTransform: \"capitalize\",\n              borderRadius: \"25px\"\n            },\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Kaydet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 21\n        }, this), isWindowforsettings && /*#__PURE__*/_jsxDEV(Selectionbar, {\n          children: Object.keys(selectionchilds).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Childsofselection, {\n              innercolor: selectionchilds[item],\n              style: {\n                color: selectionchilds[item] ? \"white\" : \"white\"\n              },\n              onClick: () => Selectionhandler(item, index),\n              children: Iconcreater(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 26\n        }, this), iscropperactive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Cropper, {\n            onImageLoaded: img => setimage(img),\n            style: {\n              backgroundColor: \"red\",\n              height: \"350px\",\n              width: \"300px\"\n            },\n            imageStyle: {\n              height: \"350px\",\n              width: \"300px\",\n              objectFit: \"cover\"\n            },\n            src: src[imagetype],\n            crop: crop,\n            onChange: newcrop => updatecrop(newcrop)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => ToCanvas(),\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Upload the file to server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!isWindowforsettings && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Background, {\n              ImageforBack: src.Backimage,\n              children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n                htmlFor: \"file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => Updatefile(e, \"Backimage\"),\n                name: \"upload\",\n                accept: \"image/png, image/gif, image/jpeg\",\n                id: \"file\",\n                type: \"file\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(ProfileImageholder, {\n              children: /*#__PURE__*/_jsxDEV(Porfileimage, {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                },\n                width: \"80px\",\n                height: \"80px\",\n                profile: src.Profileimage,\n                children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n                  htmlFor: \"file2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => Updatefile(e, \"Profileimage\"),\n                  accept: \"image/png, image/gif, image/jpeg\",\n                  id: \"file2\",\n                  type: \"file\",\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Information, {\n            isforedit: isWindowforsettings,\n            children: [isWindowforsettings && /*#__PURE__*/_jsxDEV(Holderforupicon, {\n              slipvalue: selected,\n              children: /*#__PURE__*/_jsxDEV(ArrowDropUp, {\n                style: {\n                  fontSize: \"80px\",\n                  color: \"#e9ecef\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 41\n            }, this), Object.keys(userinfo).map((item, index) => {\n              var subelements = null;\n\n              if (typeof userinfo[item].value !== \"string\") {\n                var subelements = Object.keys(userinfo[item].value).map((subitem, subindex) =>\n                /*#__PURE__*/\n                //sub values of noitification phase\n                _jsxDEV(Inputholder, {\n                  displayed: userinfo[item].activate,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textTransform: \"capitalize\"\n                      },\n                      children: userinfo[item][\"value\"][subitem][\"msg\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 623,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                      onColor: \"#ff002b\",\n                      andleDiameter: 20,\n                      onChange: () => Inputhandler(item, \"\", subitem),\n                      checkedIcon: true,\n                      uncheckedIcon: true,\n                      checked: userinfo[item][\"value\"][subitem][\"value\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 49\n                }, this));\n              } else {\n                subelements = /*#__PURE__*/_jsxDEV(Inputholder, {\n                  displayed: userinfo[item].activate,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: userinfo[item].warning,\n                    multiline: userinfo[item].multiline,\n                    rows: 4,\n                    onChange: e => Inputhandler(item, e),\n                    style: {\n                      width: \"100%\"\n                    },\n                    label: userinfo[item].label,\n                    variant: \"outlined\",\n                    value: userinfo[item].value,\n                    helperText: !userinfo[item].warning ? userinfo[item].msg : userinfo[item].errormsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 64\n                }, this);\n              }\n\n              return subelements;\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/pages/Profile/Editwindow.js"],"names":["CameraAlt","React","useState","useEffect","useReducer","styled","ArrowDropUp","Email","Lock","Notifications","Black","Porfileimage","TextField","Button","Cropper","axios","UpdateProfile","Switch","Validate","Exterior","div","active","getcropper","Inner","Background","ImageforBack","ProfileImageholder","Inputholder","displayed","Information","isforedit","Labelimage","label","Selectionbar","Childsofselection","innercolor","Holderforupicon","slipvalue","Editwindow","isWindowforsettings","updatefunc","editdata","closefunc","file","setfile","Backimage","Profileimage","crop","setcrop","aspect","height","width","x","y","src","setsrc","imagetype","setimagetype","image","setimage","result","setresult","cropvalues","iscropperactive","setcropperactive","userinfo","setuserinfo","musername","activate","value","username","warning","multiline","msg","errormsg","firstname","surname","lastname","personaltext","Personaltext","email","Currentpassword","Newpassword","ValidationNewpassword","Whenfollow","Whenlike","Whencomment","selectionchilds","setselectionchilds","Password","Notification","selected","setselected","copy","key","console","log","Inputerrorhandler","type","isEmail","New","Newvalidation","state","validate","isStrongPassword","minSymbols","minNumbers","minLowercase","minUppercase","minLength","returnScore","ToCanvas","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","base64Image","toDataURL","prev","Inputhandler","event","subkey","mutated","target","Updatefile","unit","URL","createObjectURL","files","updatecrop","newcrop","res","Sendupdates","typeofupdate","values","updateFor","backcrop","profile","Current","formData","FormData","append","JSON","stringify","userdata","Selectionhandler","keyname","index","Iconcreater","visibility","position","top","right","zIndex","textTransform","borderRadius","Object","keys","map","item","color","textAlign","img","backgroundColor","objectFit","e","display","justifyContent","alignItems","fontSize","subelements","subitem","subindex"],"mappings":"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","sourcesContent":["import { CameraAlt } from '@material-ui/icons'\r\nimport React, { useState,useEffect,useReducer} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {ArrowDropUp,Email,Lock,Notifications} from \"@material-ui/icons\"\r\nimport {Black,Porfileimage} from \"../../styledcomponents/button\"\r\nimport {TextField,Button} from \"@material-ui/core\"\r\nimport Cropper from  \"react-image-crop\"\r\nimport axios from 'axios'\r\nimport {UpdateProfile} from \"../../../Api/Api\"\r\nimport Switch from \"react-switch\"\r\nimport \"react-image-crop/dist/ReactCrop.css\"\r\nimport Validate from \"validator\"\r\n\r\nconst Exterior = styled.div`\r\ndisplay:${({active})=>active ? \"block\" : \"none\"};\r\nposition:absolute;\r\ntransform:translateX(-50%);\r\nleft:50%;\r\ntop:${({getcropper})=>getcropper ? \"150px\" : \"70px\"};;\r\nmax-width:600px;\r\nwidth:90%;\r\nheight:${({getcropper})=>getcropper ? \"350px\" : \"580px\"};\r\nbackground-color:white;\r\nborder-radius:10px;\r\nz-index:1000;\r\noverflow:${({getcropper})=>getcropper ? \"visible\" : \"auto\"};;\r\n`\r\nconst Inner = styled.div`\r\nposition:relative;\r\npadding:10px;\r\n`\r\n\r\n\r\n\r\nconst Background = styled.div`\r\ndisplay:flex;\r\ncursor:pointer;\r\njustify-content:center;\r\nalign-items:center;\r\nwidth:100%;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\nheight:200px;\r\nopacity:0.8;\r\nbackground-image:url(${({ImageforBack})=>ImageforBack});\r\nbackground-size:cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position:center; \r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\n\r\nconst ProfileImageholder=styled.div`\r\nposition:absolute;\r\ntop:160px;\r\nopacity:0.8;\r\nleft:30px;\r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\nconst Inputholder = styled.div`\r\ndisplay:${({displayed})=> displayed ? \"block\" : \"none\"};\r\nmargin-top:20px;\r\n`\r\nconst Information = styled.div`\r\nposition:relative;\r\npadding-top:${({isforedit})=>isforedit ? \"10px\" : \"80px\"};\r\nbackground-color:${({isforedit})=>isforedit ? \"#e9ecef\" : \"white\"};\r\npadding-left:20px;\r\npadding-right:20px; \r\npadding-bottom:20px;\r\nborder-radius:20px;\r\n`\r\n\r\nconst Labelimage=styled.label`\r\nposition:absolute;\r\nwidth:100%;\r\nheight:200px;\r\ndisplay:block;\r\npadding:6px;\r\npadding-left:45px;\r\nbackground-color:white;\r\ncursor:pointer;\r\ncolor:black;\r\nopacity:0;\r\n`\r\n//selection bar for editing\r\nconst Selectionbar = styled.div`\r\ndisplay:flex;\r\njustify-content:space-around;\r\nheight:30px;\r\nmargin-bottom:40px;\r\n`\r\n\r\nconst Childsofselection = styled.div`\r\nposition:relative;\r\ntop:${({innercolor})=>innercolor ? \"10px\" : \"0\"};\r\nbackground-color:${({innercolor})=>innercolor ? \"#7de2d1\" : \"#ff0a54\"};\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nborder-radius:50%;\r\nwidth:38px;\r\nheight:38px;\r\ncursor:pointer;\r\ntransition-duration:0.18s;\r\npadding:5px;\r\n`\r\n\r\nconst Holderforupicon = styled.div`\r\nposition:absolute;\r\ntransition-duration:0.3s;\r\ntop:-45px;\r\nleft:${({slipvalue})=>{\r\n    if(slipvalue == 1){\r\n        return \"55px\"\r\n    }else if(slipvalue == 2){\r\n        return \"250px\"\r\n    }else{\r\n        return \"440px\"\r\n    }\r\n}};\r\n`\r\n\r\n//email,password,notification\r\n\r\nexport default function Editwindow({isWindowforsettings,updatefunc,active,editdata,closefunc}){\r\n\r\n\r\n    const [file,setfile] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [crop,setcrop] = useState({aspect:16/16,height:200,width:100,x:50,y:50})\r\n    const [src,setsrc] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [imagetype,setimagetype] = useState(\"\")\r\n    const [image,setimage] = useState(null)\r\n    const [result,setresult] = useState({\r\n        Backimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        },\r\n        Profileimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        }\r\n    })\r\n    const [iscropperactive,setcropperactive] = useState(false)\r\n    const [userinfo,setuserinfo] = useState({\r\n        musername:{\r\n            activate:false,\r\n            value:editdata.username,\r\n            label:\"Kullanici Adi\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"\"\r\n        },\r\n        firstname:{\r\n            activate:false,\r\n            value:editdata.firstname,\r\n            label:\"Ad\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"\"\r\n        },\r\n        surname:{\r\n            activate:false,\r\n            value:editdata.lastname,\r\n            label:\"Soyad\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"\"\r\n        },\r\n        personaltext:{\r\n            activate:false,\r\n            value:editdata.Personaltext,\r\n            label:\"Kisisel Bilgiler\",\r\n            warning:false,\r\n            multiline:true,\r\n            msg:\"\",\r\n            errormsg:\"\"\r\n        },\r\n        email:{\r\n            activate:false,\r\n            value:editdata.email,\r\n            label:\"E-Posta\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"E-postani degistirmek istersen, yeni girdigin adrese bir kod gonderilicek lutfen onu gir.\",\r\n            errormsg:\"Gecerli Bir E-posta adresi girin !\"\r\n        },\r\n        Currentpassword:{\r\n            activate:false,\r\n            value:\"\",\r\n            label:\"Eski Sifreniz\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"Eski sifreni yanlis girdin galiba, tekrar dene !\"\r\n        }, \r\n        Newpassword:{\r\n            activate:false,\r\n            value:\"\",\r\n            label:\"Yeni sifrenizi girin\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"Make sure that your password has at least 6 length and contains one upper, one lower character and one number.\"\r\n        }, \r\n        ValidationNewpassword:{\r\n            activate:false,\r\n            value:\"\",\r\n            label:\"Yeni sifrenizi tekrar girin\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\",\r\n            errormsg:\"Girdiginiz sifreler ayni degil\"\r\n        },\r\n        Notifications:{\r\n            activate:false,\r\n            value:{\r\n                Whenfollow:{\r\n                    value:false,\r\n                    msg:\"Biri seni takip ettiginde bildirim al\"\r\n                },\r\n                Whenlike:{\r\n                    value:false,\r\n                    msg:\"Biri senin icerigini begendiginde bildirim al\"\r\n                },\r\n                Whencomment:{\r\n                    value:false,\r\n                    msg:\"Biri icerigine yorum yaptiginda bildirim al\"\r\n                }\r\n            },\r\n            label:\"\",\r\n            warning:false,\r\n            multiline:false,\r\n            msg:\"\"\r\n        }\r\n      \r\n    })\r\n    const [selectionchilds,setselectionchilds] = useState({\r\n        Email:true,\r\n        Password:false,\r\n        Notification:false\r\n    })\r\n    const [selected,setselected] = useState(1)\r\n\r\n    useEffect(()=>{\r\n\r\n     \r\n            const copy = {...userinfo}\r\n            for (const key in copy){\r\n                copy[key].activate = false\r\n                console.log(copy[key].activate)\r\n            }\r\n\r\n    \r\n            if(isWindowforsettings){\r\n\r\n                if(selected == 1){\r\n\r\n                    copy[\"email\"].activate = true \r\n\r\n                }else if(selected == 2){\r\n                    \r\n                    copy[\"Currentpassword\"].activate = true \r\n                    copy[\"Newpassword\"].activate = true \r\n                    copy[\"ValidationNewpassword\"].activate = true \r\n\r\n                }else{//selected 3\r\n                    copy[\"Notifications\"].activate = true\r\n                }\r\n\r\n            }else{\r\n\r\n                if(active){\r\n                    for (const key in copy) {\r\n                        if(key == \"musername\" || key == \"personaltext\" || key == \"firstname\" || key == \"surname\"){\r\n                            copy[key].activate = true\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            \r\n    \r\n            setuserinfo(copy)\r\n            \r\n\r\n    },[active,selected])\r\n\r\n    useEffect(()=>{\r\n        setcropperactive(false)\r\n    },[active])\r\n    /*\r\n    useEffect(()=>{\r\n\r\n       if(src.Backimage !== \"\"){\r\n           console.log(\"heyyo\")\r\n            const backimg = document.querySelector(\"#Backimg\")\r\n            backimg.addEventListener(\"load\",()=>{\r\n                setimage(backimg)\r\n                console.log(backimg)\r\n            })\r\n       }    \r\n\r\n    },[src])\r\n    */\r\n    const Inputerrorhandler = (type,value)=>{\r\n        switch (type) {\r\n            case \"username\":\r\n                break;\r\n            case \"firstname\":\r\n                break;\r\n            case \"email\":\r\n                return Validate.isEmail(value)\r\n            case \"password\":\r\n\r\n                if(value.New !== value.Newvalidation)\r\n                return {state:\"Unequal\",validate:false}\r\n\r\n                if(!Validate.isStrongPassword(value.New,{minSymbols:0,minNumbers:1,minLowercase:1,minUppercase:1,minLength:6,returnScore:false}))\r\n                return {state:\"Strong\",validate:false}\r\n\r\n                return true\r\n                //newpassword character checking\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const ToCanvas = async ()=>{\r\n       \r\n        const canvas = document.createElement(\"canvas\");\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width\r\n        canvas.height = crop.height\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        \r\n    \r\n        ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        crop.width,\r\n        crop.height\r\n        );\r\n        \r\n        const base64Image = canvas.toDataURL(\"imge/png\")\r\n\r\n        setresult((prev)=>{\r\n            return {...prev,[imagetype]:{src:base64Image,cropvalues:{x:crop.x,y:crop.y,width:crop.width,height:crop.height}}}\r\n        })\r\n\r\n        setcropperactive(false)\r\n        \r\n    }\r\n\r\n    const Inputhandler = (key,event,subkey)=>{\r\n\r\n        const mutated = {...userinfo}\r\n        if(key == \"Notifications\"){\r\n            mutated[key][\"value\"][subkey][\"value\"]= !mutated[key][\"value\"][subkey][\"value\"]\r\n        }else{\r\n            mutated[key].value=event.target.value\r\n        }\r\n       \r\n        setuserinfo(mutated)\r\n    }\r\n\r\n    const Updatefile = (event,type)=>{\r\n\r\n        if(type == \"Backimage\"){\r\n            setcrop({\r\n                aspect:16/9,\r\n                height:200,\r\n                width:300,\r\n                unit:\"px\",\r\n                x:0,\r\n                y:50\r\n            })\r\n        }\r\n        else{\r\n            setcrop({\r\n                aspect:16/16,\r\n                height:200,\r\n                width:200,\r\n                unit:\"px\",\r\n                x:50,\r\n                y:50\r\n            })\r\n        }\r\n        \r\n        setimagetype(type)\r\n        setcropperactive(true)\r\n        setsrc((prev)=>{\r\n            return {...prev,[type]:URL.createObjectURL(event.target.files[0])}\r\n        })\r\n        setfile((prev)=>{\r\n            return {...prev,[type]:event.target.files[0]}\r\n        })\r\n\r\n      \r\n    }\r\n\r\n    const updatecrop = (newcrop)=>{\r\n        //buraya bak\r\n        if(crop.aspect > 1){\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y}\r\n            })\r\n        }\r\n        else{\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y,x:newcrop.x}\r\n            })\r\n        }\r\n        console.log(crop)\r\n\r\n        //value of cropper width height x and y\r\n    }\r\n\r\n    const Sendupdates = async (typeofupdate)=>{\r\n\r\n        const values = {}\r\n        const copy = {...userinfo}\r\n        var updateFor = \"\"\r\n\r\n        if(!isWindowforsettings){\r\n\r\n            updateFor = \"Profile\"\r\n            values.backcrop = result.Backimage.cropvalues\r\n            values.profile  = result.Profileimage.cropvalues\r\n            \r\n            for (const key in userinfo){\r\n                if(key == \"email\")\r\n                break\r\n                values[key] = userinfo[key].value\r\n            }\r\n\r\n        }else if(typeofupdate == 1){\r\n\r\n            updateFor = \"Email\"\r\n            if(!Inputerrorhandler(\"email\",userinfo[\"email\"].value)){\r\n                copy[\"email\"].warning = true\r\n                copy[\"email\"].msg = \"Gecerli Bir E-posta adresi girin !\"\r\n                return setuserinfo(copy)\r\n            }\r\n           \r\n            values[\"email\"] = userinfo[\"email\"].value\r\n            \r\n        }else if(typeofupdate == 2){\r\n\r\n            updateFor = \"Password\"\r\n            const {state,validate} = Inputerrorhandler(\"password\",{Current:userinfo[\"Currentpassword\"].value,New:userinfo[\"Newpassword\"].value,Newvalidation:userinfo[\"ValidationNewpassword\"].value})\r\n\r\n            if(!validate){\r\n                if(state == \"Unequal\"){\r\n                    copy[\"ValidationNewpassword\"].warning = true       \r\n                }else{\r\n                    copy[\"Newpassword\"].warning = true\r\n                }\r\n\r\n                return setuserinfo(copy)\r\n            }\r\n\r\n            values[\"Currentpassword\"] = userinfo[\"Currentpassword\"].value\r\n            values[\"Newpassword\"] = userinfo[\"Newpassword\"].value\r\n            values[\"NewValidation\"] = userinfo[\"ValidationNewpassword\"].value\r\n            \r\n        }else{\r\n\r\n            updateFor = \"Notification\"\r\n            values[\"Notifications\"] = userinfo[\"Notifications\"][\"value\"]\r\n\r\n        }\r\n\r\n\r\n        const formData=new FormData();\r\n\r\n        if(file.Backimage !== \"\" && file.Profileimage !== \"\"){\r\n\r\n            formData.append(\"upload\",file.Backimage);\r\n            formData.append(\"upload2\",file.Profileimage)\r\n            \r\n        }\r\n        else{\r\n            \r\n            formData.append(\"upload\",file[imagetype])\r\n        }\r\n\r\n        formData.append(\"Profilevalues\",JSON.stringify(values))\r\n        \r\n     \r\n\r\n        UpdateProfile({\r\n            userdata:formData,\r\n            typeofupdate:updateFor,\r\n        })\r\n\r\n    }\r\n\r\n    const Selectionhandler=(keyname,index)=>{\r\n        \r\n        const copy = {...selectionchilds}\r\n        for (const key in copy) {\r\n           copy[key] = false\r\n        }\r\n        \r\n        copy[keyname] = true\r\n        setselected(index+1)\r\n        setselectionchilds(copy)\r\n    }\r\n\r\n    const Iconcreater =(keyname)=>{\r\n        if(keyname == \"Email\")\r\n        return <Email></Email>\r\n        if(keyname == \"Password\")\r\n        return <Lock></Lock>\r\n        if(keyname == \"Notification\")\r\n        return <Notifications></Notifications>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Black onClick={closefunc} aktif={active}/>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Backimg\" src={src[\"Backimage\"]}></img>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Profileimg\" src={src[\"Profileimage\"]}></img>\r\n            <Exterior getcropper={iscropperactive} active={active}>\r\n                <Inner>\r\n                    <div style={{position:\"absolute\",top:isWindowforsettings ? \"500px\":\"250px\",right:\"40px\",zIndex:\"300\"}}>\r\n                        <Button onClick={()=>Sendupdates(selected)} style={{textTransform:\"capitalize\",borderRadius:\"25px\"}} color=\"secondary\" variant=\"contained\">Kaydet</Button>\r\n                    </div>\r\n                    {\r\n                        isWindowforsettings &&\r\n                        (<Selectionbar>\r\n                            {\r\n                                Object.keys(selectionchilds).map((item,index)=>{\r\n                                    return (<Childsofselection innercolor={selectionchilds[item]} style={{color:selectionchilds[item] ? \"white\" : \"white\"}} onClick={()=>Selectionhandler(item,index)}>{Iconcreater(item)}</Childsofselection>)\r\n                                })\r\n                            }\r\n                        </Selectionbar>)\r\n                    }\r\n                    {\r\n                        iscropperactive \r\n                        \r\n                        ? \r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <Cropper  onImageLoaded={(img)=>setimage(img)} style={{backgroundColor:\"red\",height:\"350px\",width:\"300px\"}}  imageStyle={{height:\"350px\",width:\"300px\",objectFit:\"cover\"}}  src={src[imagetype]} crop={crop} onChange={(newcrop)=>updatecrop(newcrop)}/> \r\n                                <div style={{textAlign:\"center\"}}>\r\n                                 <Button onClick={()=>ToCanvas()} color=\"secondary\" variant=\"contained\" >Upload the file to server</Button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        :\r\n\r\n                             (<> \r\n                                    { !isWindowforsettings &&  \r\n\r\n                                        (<>\r\n                                            <Background ImageforBack={src.Backimage}>\r\n                                                <Labelimage  htmlFor=\"file\"></Labelimage>\r\n                                                <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                                <input onChange={(e)=>Updatefile(e,\"Backimage\")} name=\"upload\" accept=\"image/png, image/gif, image/jpeg\" id=\"file\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                            </Background>\r\n                                            <ProfileImageholder>\r\n                                                <Porfileimage style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} width=\"80px\" height=\"80px\" profile={src.Profileimage}>\r\n                                                    <Labelimage htmlFor=\"file2\"></Labelimage>\r\n                                                    <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                                    <input onChange={(e)=>Updatefile(e,\"Profileimage\")} accept=\"image/png, image/gif, image/jpeg\" id=\"file2\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                                </Porfileimage>\r\n                                            </ProfileImageholder>\r\n                                            \r\n                                        </>)\r\n\r\n                                    }\r\n                                  \r\n                                <Information isforedit={isWindowforsettings}>\r\n\r\n                                    {\r\n                                        isWindowforsettings &&\r\n                                        <Holderforupicon slipvalue={selected}>\r\n                                           <ArrowDropUp style={{fontSize:\"80px\",color:\"#e9ecef\"}}></ArrowDropUp>\r\n                                        </Holderforupicon>\r\n                                    }\r\n                                   \r\n                                    {\r\n                                        Object.keys(userinfo).map((item,index)=>{   \r\n\r\n                                            var subelements = null\r\n                                            if(typeof userinfo[item].value !== \"string\"){\r\n                                                var subelements = Object.keys(userinfo[item].value).map((subitem,subindex)=>(//sub values of noitification phase\r\n                                                <Inputholder displayed={userinfo[item].activate}>  \r\n                                                <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                                                    <p style={{textTransform:\"capitalize\"}}>{userinfo[item][\"value\"][subitem][\"msg\"]}</p>\r\n                                                    <Switch onColor='#ff002b' andleDiameter={20} onChange={()=>Inputhandler(item,\"\",subitem)} checkedIcon={true} uncheckedIcon={true} checked={userinfo[item][\"value\"][subitem][\"value\"]}></Switch>\r\n                                                </div>\r\n                                                </Inputholder>))\r\n\r\n                                            }else{\r\n\r\n                                                subelements = (<Inputholder displayed={userinfo[item].activate}>\r\n                                                                <TextField   \r\n                                                                    error={userinfo[item].warning}\r\n                                                                    multiline={userinfo[item].multiline}\r\n                                                                    rows={4}\r\n                                                                    onChange={(e)=>Inputhandler(item,e)}\r\n                                                                    style={{width:\"100%\"}}\r\n                                                                    label={userinfo[item].label}\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={userinfo[item].value}\r\n                                                                    helperText={!userinfo[item].warning ? userinfo[item].msg : userinfo[item].errormsg}\r\n                                                                ></TextField>\r\n                                                             </Inputholder>)\r\n\r\n                                            }\r\n\r\n                                            return subelements\r\n                                        })\r\n                                    }\r\n                                </Information>\r\n                        </>)\r\n                    }\r\n                </Inner>\r\n            </Exterior>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}