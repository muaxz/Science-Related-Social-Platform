{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3001\";\nexport const loginreq = async ({\n  setlogged,\n  setuserdata,\n  userdata,\n  router,\n  seterrmsg,\n  setbackenderror,\n  setactive\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/login\", {\n      userdata: userdata\n    });\n    console.log(data);\n\n    if (data.wrong = \"WP\") {\n      setbackenderror(\"WP\");\n      setactive(true);\n    } else if (data.wrong = \"WE\") {\n      setbackenderror(\"WE\");\n      setactive(true);\n    } else {\n      setlogged(true);\n      setuserdata(data.Userdata);\n      localStorage.setItem(\"_TOKEN\", data.token); //http cookie only ile store edicez\n\n      router.push(\"/\");\n    }\n  } catch (err) {\n    seterrmsg(true);\n  }\n};\nexport const resigterreq = async ({\n  setbackenderror,\n  userdata,\n  setactive,\n  seterrmsg\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/register\", {\n      userdata: userdata\n    });\n\n    if (data.exist) {\n      setbackenderror(\"EXİST\");\n      setactive(true);\n    } else {//kayıt olmanız başarılı\n    }\n  } catch (err) {\n    seterrmsg(true);\n  }\n};\nexport const producereq = async ({\n  contentdata,\n  seterrmsg,\n  setwindow\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/post/produce\", {\n      contentdata: contentdata\n    });\n\n    if (data.state == \"success\") {\n      setwindow(true); //we route işlemi\n    } else {\n      seterrmsg(true);\n    }\n  } catch (err) {\n    seterrmsg(true);\n  }\n};","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/Api/Api.js"],"names":["axios","defaults","baseURL","loginreq","setlogged","setuserdata","userdata","router","seterrmsg","setbackenderror","setactive","data","post","console","log","wrong","Userdata","localStorage","setItem","token","push","err","resigterreq","exist","producereq","contentdata","setwindow","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAuB,uBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAC,OAAM;AAACC,EAAAA,SAAD;AAAWC,EAAAA,WAAX;AAAuBC,EAAAA,QAAvB;AAAgCC,EAAAA,MAAhC;AAAuCC,EAAAA,SAAvC;AAAiDC,EAAAA,eAAjD;AAAiEC,EAAAA;AAAjE,CAAN,KAAoF;AAEtG,MAAG;AAED,UAAK;AAACC,MAAAA;AAAD,QAAO,MAAMX,KAAK,CAACY,IAAN,CAAW,QAAX,EAAoB;AAACN,MAAAA,QAAQ,EAACA;AAAV,KAApB,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAGA,IAAI,CAACI,KAAL,GAAW,IAAd,EAAmB;AAEjBN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AAED,KALD,MAMK,IAAGC,IAAI,CAACI,KAAL,GAAW,IAAd,EAAmB;AAEtBN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AAED,KALI,MAMD;AACFN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,WAAW,CAACM,IAAI,CAACK,QAAN,CAAX;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BP,IAAI,CAACQ,KAAnC,EAHE,CAGwC;;AAC1CZ,MAAAA,MAAM,CAACa,IAAP,CAAY,GAAZ;AACD;AAEF,GAvBD,CAuBC,OAAMC,GAAN,EAAU;AACPb,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,CA7BM;AAgCP,OAAO,MAAMc,WAAW,GAAC,OAAM;AAACb,EAAAA,eAAD;AAAiBH,EAAAA,QAAjB;AAA0BI,EAAAA,SAA1B;AAAoCF,EAAAA;AAApC,CAAN,KAAuD;AAE9E,MAAG;AACD,UAAK;AAACG,MAAAA;AAAD,QAAO,MAAMX,KAAK,CAACY,IAAN,CAAW,WAAX,EAAuB;AAACN,MAAAA,QAAQ,EAACA;AAAV,KAAvB,CAAlB;;AAEA,QAAGK,IAAI,CAACY,KAAR,EAAc;AACVd,MAAAA,eAAe,CAAC,OAAD,CAAf;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAHD,MAII,CACA;AACH;AACF,GAVD,CAUC,OAAMW,GAAN,EAAU;AACPb,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACF,CAfM;AAiBP,OAAO,MAAMgB,UAAU,GAAC,OAAM;AAACC,EAAAA,WAAD;AAAajB,EAAAA,SAAb;AAAuBkB,EAAAA;AAAvB,CAAN,KAA0C;AAEhE,MAAG;AACD,UAAK;AAACf,MAAAA;AAAD,QAAO,MAAMX,KAAK,CAACY,IAAN,CAAW,eAAX,EAA2B;AAACa,MAAAA,WAAW,EAACA;AAAb,KAA3B,CAAlB;;AAEA,QAAGd,IAAI,CAACgB,KAAL,IAAc,SAAjB,EAA2B;AACvBD,MAAAA,SAAS,CAAC,IAAD,CAAT,CADuB,CAEvB;AACH,KAHD,MAII;AACFlB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAVD,CAUC,OAAMa,GAAN,EAAU;AACPb,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACF,CAfM","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL=\"http://localhost:3001\";\r\n\r\nexport const loginreq=async({setlogged,setuserdata,userdata,router,seterrmsg,setbackenderror,setactive})=>{\r\n\r\n    try{\r\n\r\n      const{data}=await axios.post(\"/login\",{userdata:userdata})\r\n      console.log(data);\r\n      if(data.wrong=\"WP\"){\r\n\r\n        setbackenderror(\"WP\")\r\n        setactive(true);\r\n\r\n      }\r\n      else if(data.wrong=\"WE\"){\r\n\r\n        setbackenderror(\"WE\")\r\n        setactive(true);\r\n\r\n      }\r\n      else{\r\n        setlogged(true);\r\n        setuserdata(data.Userdata)\r\n        localStorage.setItem(\"_TOKEN\",data.token);//http cookie only ile store edicez\r\n        router.push(\"/\");\r\n      }\r\n\r\n    }catch(err){\r\n        seterrmsg(true)\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const resigterreq=async({setbackenderror,userdata,setactive,seterrmsg})=>{\r\n    \r\n  try{\r\n    const{data}=await axios.post(\"/register\",{userdata:userdata})\r\n    \r\n    if(data.exist){\r\n        setbackenderror(\"EXİST\")\r\n        setactive(true)\r\n    }\r\n    else{\r\n        //kayıt olmanız başarılı\r\n    }\r\n  }catch(err){\r\n      seterrmsg(true)\r\n  }\r\n}\r\n\r\nexport const producereq=async({contentdata,seterrmsg,setwindow})=>{\r\n\r\n  try{\r\n    const{data}=await axios.post(\"/post/produce\",{contentdata:contentdata})\r\n    \r\n    if(data.state == \"success\"){\r\n        setwindow(true);\r\n        //we route işlemi\r\n    }\r\n    else{ \r\n      seterrmsg(true);\r\n    }\r\n  }catch(err){\r\n      seterrmsg(true)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}