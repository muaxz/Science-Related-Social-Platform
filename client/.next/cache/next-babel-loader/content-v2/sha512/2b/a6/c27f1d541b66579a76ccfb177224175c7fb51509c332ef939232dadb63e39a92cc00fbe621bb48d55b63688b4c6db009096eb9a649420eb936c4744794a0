{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nexport default function useClickoutside() {\n  _s();\n\n  var ref = useRef();\n\n  var _useState = useState(true),\n      visible = _useState[0],\n      setvisible = _useState[1];\n\n  var handleclick = function handleclick(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setvisible(false);\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"click\", handleclick);\n    return function () {\n      document.removeEventListener(\"click\", handleclick);\n    };\n  });\n  return {\n    visible: visible,\n    setvisible: setvisible,\n    ref: ref\n  };\n}\n\n_s(useClickoutside, \"/SFcbYeADbayU/33zLCrlXZB5Vg=\");","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/hooks/Clikcoutisde.js"],"names":["React","useEffect","useState","useRef","useClickoutside","ref","visible","setvisible","handleclick","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,MAAjC,QAA8C,OAA9C;AAEA,eAAe,SAASC,eAAT,GAA0B;AAAA;;AACrC,MAAMC,GAAG,GAACF,MAAM,EAAhB;;AADqC,kBAEVD,QAAQ,CAAC,IAAD,CAFE;AAAA,MAE9BI,OAF8B;AAAA,MAEtBC,UAFsB;;AAIrC,MAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,KAAD,EAAS;AACvB,QAAGJ,GAAG,CAACK,OAAJ,IAAe,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAnB,EAAsD;AAClDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAJD;;AAMAN,EAAAA,SAAS,CAAC,YAAI;AAEZY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAkCN,WAAlC;AAEA,WAAO,YAAI;AACTK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAqCP,WAArC;AACD,KAFD;AAID,GARQ,CAAT;AAUA,SAAO;AAACF,IAAAA,OAAO,EAAPA,OAAD;AAASC,IAAAA,UAAU,EAAVA,UAAT;AAAoBF,IAAAA,GAAG,EAAHA;AAApB,GAAP;AACH;;GArBuBD,e","sourcesContent":["import React,{useEffect,useState,useRef} from 'react'\r\n\r\nexport default function useClickoutside(){\r\n    const ref=useRef();\r\n    const [visible,setvisible]=useState(true);\r\n\r\n    const handleclick=(event)=>{  \r\n        if(ref.current && !ref.current.contains(event.target)){\r\n            setvisible(false);\r\n        }  \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n      document.addEventListener(\"click\",handleclick);\r\n\r\n      return ()=>{\r\n        document.removeEventListener(\"click\",handleclick);\r\n      }\r\n\r\n    },)\r\n\r\n    return {visible,setvisible,ref}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}