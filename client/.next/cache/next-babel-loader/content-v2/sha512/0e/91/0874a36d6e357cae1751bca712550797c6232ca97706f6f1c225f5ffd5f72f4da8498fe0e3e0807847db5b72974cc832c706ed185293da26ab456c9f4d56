{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\pages\\\\Profile\\\\Editwindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CameraAlt } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { Black, Porfileimage } from \"../../styledcomponents/button\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Cropper from \"react-image-crop\";\nimport axios from 'axios';\nimport \"react-image-crop/dist/ReactCrop.css\";\nconst Exterior = styled.div.withConfig({\n  displayName: \"Editwindow__Exterior\",\n  componentId: \"sc-9h7al1-0\"\n})([\"display:\", \";position:absolute;transform:translateX(-50%);left:50%;top:\", \";;max-width:600px;width:90%;height:\", \";background-color:white;border-radius:10px;z-index:1000;overflow:\", \";;\"], ({\n  active\n}) => active ? \"block\" : \"none\", ({\n  getcropper\n}) => getcropper ? \"150px\" : \"70px\", ({\n  getcropper\n}) => getcropper ? \"350px\" : \"580px\", ({\n  getcropper\n}) => getcropper ? \"visible\" : \"auto\");\nconst Inner = styled.div.withConfig({\n  displayName: \"Editwindow__Inner\",\n  componentId: \"sc-9h7al1-1\"\n})([\"position:relative;\"]);\nconst Background = styled.div.withConfig({\n  displayName: \"Editwindow__Background\",\n  componentId: \"sc-9h7al1-2\"\n})([\"display:flex;cursor:pointer;justify-content:center;align-items:center;width:100%;border-top-left-radius:10px;border-top-right-radius:10px;height:200px;opacity:0.8;background-image:url(\", \");background-size:cover;background-repeat:no-repeat;background-position:center;transition:0.4s;&:hover{opacity:1;}\"], ({\n  ImageforBack\n}) => ImageforBack);\nconst ProfileImageholder = styled.div.withConfig({\n  displayName: \"Editwindow__ProfileImageholder\",\n  componentId: \"sc-9h7al1-3\"\n})([\"position:absolute;top:160px;opacity:0.8;left:30px;transition:0.4s;&:hover{opacity:1;}\"]);\nconst Inputholder = styled.div.withConfig({\n  displayName: \"Editwindow__Inputholder\",\n  componentId: \"sc-9h7al1-4\"\n})([\"margin-top:20px;\"]);\nconst Information = styled.div.withConfig({\n  displayName: \"Editwindow__Information\",\n  componentId: \"sc-9h7al1-5\"\n})([\"padding-top:80px;padding-left:20px;padding-right:20px;padding-bottom:20px;\"]);\nconst Labelimage = styled.label.withConfig({\n  displayName: \"Editwindow__Labelimage\",\n  componentId: \"sc-9h7al1-6\"\n})([\"position:absolute;width:100%;height:200px;display:block;padding:6px;padding-left:45px;background-color:white;cursor:pointer;color:black;opacity:0;\"]);\nexport default function Editwindow({\n  updatefunc,\n  active,\n  editdata,\n  closefunc\n}) {\n  const {\n    0: file,\n    1: setfile\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: crop,\n    1: setcrop\n  } = useState({\n    aspect: 16 / 16,\n    height: 200,\n    width: 100,\n    x: 50,\n    y: 50\n  });\n  const {\n    0: src,\n    1: setsrc\n  } = useState({\n    Backimage: \"\",\n    Profileimage: \"\"\n  });\n  const {\n    0: imagetype,\n    1: setimagetype\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setimage\n  } = useState(null);\n  const {\n    0: result,\n    1: setresult\n  } = useState({\n    Backimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    },\n    Profileimage: {\n      src: \"\",\n      cropvalues: {\n        width: \"\",\n        height: \"\",\n        x: \"\",\n        y: \"\"\n      }\n    }\n  });\n  const {\n    0: iscropperactive,\n    1: setcropperactive\n  } = useState(false);\n  const {\n    0: userinfo,\n    1: setuserinfo\n  } = useState({\n    username: {\n      value: editdata.username,\n      label: \"Kullanici Adi\",\n      warning: false,\n      multiline: false\n    },\n    firstname: {\n      value: editdata.firstname,\n      label: \"Ad\",\n      warning: false,\n      multiline: false\n    },\n    surname: {\n      value: editdata.lastname,\n      label: \"Soyad\",\n      warning: false,\n      multiline: false\n    },\n    personaltext: {\n      value: editdata.Personaltext,\n      label: \"Kisisel Bilgiler\",\n      warning: false,\n      multiline: true\n    }\n  });\n  useEffect(() => {\n    setcropperactive(false);\n  }, [active]);\n  useEffect(() => {\n    if (src.Backimage !== \"\") {\n      console.log(\"heyyo\");\n      const backimg = document.querySelector(\"#Backimg\");\n      backimg.addEventListener(\"load\", () => {\n        setimage(backimg);\n        console.log(backimg);\n      });\n    }\n  }, [src]);\n\n  const ToCanvas = async () => {\n    const calculate = 350 / crop.y;\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = Math.ceil(crop.width * scaleX);\n    canvas.height = Math.ceil(crop.height * scaleY);\n    const ctx = canvas.getContext(\"2d\");\n    var maxWidth = 1200,\n        maxHeight = 1200 / (16 / 9);\n    var targetWidth = image.naturalWidth,\n        targetHeight = image.naturalHeight;\n\n    if (image.naturalWidth > maxWidth || image.naturalHeight > maxHeight) {\n      if (image.naturalWidth / image.naturalHeight > maxWidth / maxHeight) {\n        targetWidth = maxWidth;\n        targetHeight = Math.round(maxWidth * (image.naturalHeight / image.naturalWidth));\n      } else {\n        targetHeight = maxHeight;\n        targetWidth = Math.round(maxHeight * (image.naturalWidth / image.naturalHeight));\n      }\n    }\n\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, targetWidth, targetHeight);\n    const base64Image = canvas.toDataURL(\"imge/png\");\n    setresult(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [imagetype]: {\n          src: base64Image,\n          cropvalues: {\n            x: crop.x,\n            y: crop.y,\n            width: crop.width,\n            height: crop.height\n          }\n        }\n      });\n    });\n    setcropperactive(false);\n  };\n\n  const Inputhandler = (key, event) => {\n    const mutated = _objectSpread({}, userinfo);\n\n    mutated[key].value = event.target.value;\n    setuserinfo(mutated);\n  };\n\n  const Updatefile = (event, type) => {\n    if (type == \"Backimage\") {\n      setcrop({\n        aspect: 16 / 9,\n        height: 200,\n        width: 600,\n        unit: \"px\",\n        x: 0,\n        y: 50\n      });\n    } else {\n      setcrop({\n        aspect: 16 / 16,\n        height: 200,\n        width: 200,\n        unit: \"px\",\n        x: 50,\n        y: 50\n      });\n    }\n\n    setimagetype(type);\n    setcropperactive(true);\n    setsrc(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: URL.createObjectURL(event.target.files[0])\n      });\n    });\n    setfile(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [type]: event.target.files[0]\n      });\n    });\n  };\n\n  const updatecrop = newcrop => {\n    //buraya bak\n    if (crop.aspect > 1) {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y\n        });\n      });\n    } else {\n      setcrop(res => {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          y: newcrop.y,\n          x: newcrop.x\n        });\n      });\n    }\n\n    console.log(crop); //value of cropper width height x and y\n  };\n\n  const Sendupdates = async () => {\n    const values = {};\n\n    for (const key in userinfo) {\n      values[key] = userinfo[key].value;\n    }\n\n    values.backcrop = result.Backimage.cropvalues;\n    values.profile = result.Profileimage.cropvalues;\n    const formData = new FormData();\n\n    if (file.Backimage !== \"\" && file.Profileimage !== \"\") {\n      formData.append(\"upload\", file.Backimage);\n      formData.append(\"upload\", \"sa\");\n    }\n\n    formData.append(\"Profilevalues\", JSON.stringify(values));\n\n    try {\n      await axios.post(`/upload/x/x/x/x`, formData);\n    } catch (err) {\n      return console.log(\"UPLOAD ERRORRRRRRR\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Black, {\n      onClick: closefunc,\n      aktif: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Backimg\",\n      src: src[\"Backimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"Profileimg\",\n      src: src[\"Profileimage\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Exterior, {\n      getcropper: iscropperactive,\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Inner, {\n        children: iscropperactive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Cropper, {\n            style: {\n              backgroundColor: \"red\",\n              height: \"350px\",\n              width: \"300px\"\n            },\n            imageStyle: {\n              height: \"350px\",\n              width: \"300px\",\n              objectFit: \"cover\"\n            },\n            src: src[imagetype],\n            crop: crop,\n            onChange: newcrop => updatecrop(newcrop)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => ToCanvas(),\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Upload the file to server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            ImageforBack: result.Backimage.src,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"absolute\",\n                top: \"225px\",\n                right: \"10px\",\n                zIndex: \"1000\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => Sendupdates(),\n                style: {\n                  textTransform: \"capitalize\",\n                  borderRadius: \"25px\"\n                },\n                color: \"secondary\",\n                variant: \"contained\",\n                children: \"Kaydet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Labelimage, {\n              htmlFor: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => Updatefile(e, \"Backimage\"),\n              name: \"upload\",\n              accept: \"image/png, image/gif, image/jpeg\",\n              id: \"file\",\n              type: \"file\",\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ProfileImageholder, {\n            children: /*#__PURE__*/_jsxDEV(Porfileimage, {\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              width: \"80px\",\n              height: \"80px\",\n              profile: result.Profileimage.src,\n              children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n                htmlFor: \"file2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => Updatefile(e, \"Profileimage\"),\n                accept: \"image/png, image/gif, image/jpeg\",\n                id: \"file2\",\n                type: \"file\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Information, {\n            children: Object.keys(userinfo).map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Inputholder, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: userinfo[item].multiline,\n                  rows: 4,\n                  onChange: e => Inputhandler(item, e),\n                  style: {\n                    width: \"100%\"\n                  },\n                  label: userinfo[item].label,\n                  variant: \"outlined\",\n                  value: userinfo[item].value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 53\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/pages/Profile/Editwindow.js"],"names":["CameraAlt","React","useState","useEffect","styled","Black","Porfileimage","TextField","Button","Cropper","axios","Exterior","div","active","getcropper","Inner","Background","ImageforBack","ProfileImageholder","Inputholder","Information","Labelimage","label","Editwindow","updatefunc","editdata","closefunc","file","setfile","Backimage","Profileimage","crop","setcrop","aspect","height","width","x","y","src","setsrc","imagetype","setimagetype","image","setimage","result","setresult","cropvalues","iscropperactive","setcropperactive","userinfo","setuserinfo","username","value","warning","multiline","firstname","surname","lastname","personaltext","Personaltext","console","log","backimg","document","querySelector","addEventListener","ToCanvas","calculate","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","Math","ceil","ctx","getContext","maxWidth","maxHeight","targetWidth","targetHeight","round","drawImage","base64Image","toDataURL","prev","Inputhandler","key","event","mutated","target","Updatefile","type","unit","URL","createObjectURL","files","updatecrop","newcrop","res","Sendupdates","values","backcrop","profile","formData","FormData","append","JSON","stringify","post","err","visibility","position","textAlign","backgroundColor","objectFit","top","right","zIndex","textTransform","borderRadius","color","e","display","justifyContent","alignItems","Object","keys","map","item","index"],"mappings":"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","sourcesContent":["import { CameraAlt } from '@material-ui/icons'\r\nimport React, { useState,useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Black,Porfileimage} from \"../../styledcomponents/button\"\r\nimport {TextField,Button} from \"@material-ui/core\"\r\nimport Cropper from  \"react-image-crop\"\r\nimport axios from 'axios'\r\nimport \"react-image-crop/dist/ReactCrop.css\"\r\n\r\nconst Exterior = styled.div`\r\ndisplay:${({active})=>active ? \"block\" : \"none\"};\r\nposition:absolute;\r\ntransform:translateX(-50%);\r\nleft:50%;\r\ntop:${({getcropper})=>getcropper ? \"150px\" : \"70px\"};;\r\nmax-width:600px;\r\nwidth:90%;\r\nheight:${({getcropper})=>getcropper ? \"350px\" : \"580px\"};\r\nbackground-color:white;\r\nborder-radius:10px;\r\nz-index:1000;\r\noverflow:${({getcropper})=>getcropper ? \"visible\" : \"auto\"};;\r\n`\r\nconst Inner = styled.div`\r\nposition:relative;\r\n\r\n`\r\n\r\nconst Background = styled.div`\r\ndisplay:flex;\r\ncursor:pointer;\r\njustify-content:center;\r\nalign-items:center;\r\nwidth:100%;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\nheight:200px;\r\nopacity:0.8;\r\nbackground-image:url(${({ImageforBack})=>ImageforBack});\r\nbackground-size:cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position:center; \r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\n\r\nconst ProfileImageholder=styled.div`\r\nposition:absolute;\r\ntop:160px;\r\nopacity:0.8;\r\nleft:30px;\r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\nconst Inputholder = styled.div`\r\nmargin-top:20px;\r\n`\r\nconst Information = styled.div`\r\npadding-top:80px;\r\npadding-left:20px;\r\npadding-right:20px; \r\npadding-bottom:20px;\r\n`\r\n\r\nconst Labelimage=styled.label`\r\nposition:absolute;\r\nwidth:100%;\r\nheight:200px;\r\ndisplay:block;\r\npadding:6px;\r\npadding-left:45px;\r\nbackground-color:white;\r\ncursor:pointer;\r\ncolor:black;\r\nopacity:0;\r\n`\r\n\r\nexport default function Editwindow({updatefunc,active,editdata,closefunc}){\r\n\r\n\r\n    const [file,setfile] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [crop,setcrop] = useState({aspect:16/16,height:200,width:100,x:50,y:50})\r\n    const [src,setsrc] = useState({\r\n        Backimage:\"\",\r\n        Profileimage:\"\"\r\n    })\r\n    const [imagetype,setimagetype] = useState(\"\")\r\n    const [image,setimage] = useState(null)\r\n    const [result,setresult] = useState({\r\n        Backimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        },\r\n        Profileimage:{\r\n            src:\"\",\r\n            cropvalues:{\r\n                width:\"\",\r\n                height:\"\",\r\n                x:\"\",\r\n                y:\"\"\r\n            }\r\n        }\r\n    })\r\n    const [iscropperactive,setcropperactive] = useState(false)\r\n    const [userinfo,setuserinfo] = useState({\r\n        username:{\r\n            value:editdata.username,\r\n            label:\"Kullanici Adi\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        firstname:{\r\n            value:editdata.firstname,\r\n            label:\"Ad\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        surname:{\r\n            value:editdata.lastname,\r\n            label:\"Soyad\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        personaltext:{\r\n            value:editdata.Personaltext,\r\n            label:\"Kisisel Bilgiler\",\r\n            warning:false,\r\n            multiline:true\r\n        },\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        setcropperactive(false)\r\n    },[active])\r\n\r\n    useEffect(()=>{\r\n\r\n       if(src.Backimage !== \"\"){\r\n           console.log(\"heyyo\")\r\n            const backimg = document.querySelector(\"#Backimg\")\r\n            backimg.addEventListener(\"load\",()=>{\r\n                setimage(backimg)\r\n                console.log(backimg)\r\n            })\r\n       }    \r\n\r\n    },[src])\r\n\r\n    const ToCanvas = async ()=>{\r\n        const calculate = 350/crop.y\r\n        const canvas = document.createElement(\"canvas\");\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = Math.ceil(crop.width*scaleX);\r\n        canvas.height = Math.ceil(crop.height*scaleY);\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        var maxWidth = 1200, maxHeight = 1200 / (16 / 9);\r\n        var targetWidth = image.naturalWidth,\r\n        targetHeight = image.naturalHeight;\r\n        if (image.naturalWidth > maxWidth || image.naturalHeight > maxHeight) {\r\n        if (image.naturalWidth / image.naturalHeight > maxWidth / maxHeight) {\r\n            targetWidth = maxWidth;\r\n            targetHeight = Math.round(maxWidth * (image.naturalHeight / image.naturalWidth));\r\n        } else {\r\n            targetHeight = maxHeight;\r\n            targetWidth = Math.round(maxHeight * (image.naturalWidth / image.naturalHeight));\r\n        }\r\n        }\r\n    \r\n        ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        targetWidth,\r\n        targetHeight\r\n        );\r\n        \r\n        const base64Image = canvas.toDataURL(\"imge/png\")\r\n\r\n        setresult((prev)=>{\r\n            return {...prev,[imagetype]:{src:base64Image,cropvalues:{x:crop.x,y:crop.y,width:crop.width,height:crop.height}}}\r\n        })\r\n\r\n        setcropperactive(false)\r\n        \r\n    }\r\n\r\n    const Inputhandler = (key,event)=>{\r\n\r\n        const mutated = {...userinfo}\r\n        mutated[key].value=event.target.value\r\n        setuserinfo(mutated)\r\n    }\r\n\r\n    const Updatefile = (event,type)=>{\r\n\r\n        if(type == \"Backimage\"){\r\n            setcrop({\r\n                aspect:16/9,\r\n                height:200,\r\n                width:600,\r\n                unit:\"px\",\r\n                x:0,\r\n                y:50\r\n            })\r\n        }\r\n        else{\r\n            setcrop({\r\n                aspect:16/16,\r\n                height:200,\r\n                width:200,\r\n                unit:\"px\",\r\n                x:50,\r\n                y:50\r\n            })\r\n        }\r\n        \r\n        setimagetype(type)\r\n        setcropperactive(true)\r\n        setsrc((prev)=>{\r\n            return {...prev,[type]:URL.createObjectURL(event.target.files[0])}\r\n        })\r\n        setfile((prev)=>{\r\n            return {...prev,[type]:event.target.files[0]}\r\n        })\r\n\r\n      \r\n    }\r\n\r\n    const updatecrop = (newcrop)=>{\r\n        //buraya bak\r\n        if(crop.aspect > 1){\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y}\r\n            })\r\n        }\r\n        else{\r\n            setcrop((res)=>{\r\n                return {...res,y:newcrop.y,x:newcrop.x}\r\n            })\r\n        }\r\n        console.log(crop)\r\n\r\n        //value of cropper width height x and y\r\n    }\r\n\r\n    const Sendupdates = async ()=>{\r\n\r\n        const values = {}\r\n        for (const key in userinfo){\r\n            values[key] = userinfo[key].value\r\n        }\r\n\r\n        values.backcrop = result.Backimage.cropvalues\r\n        values.profile  = result.Profileimage.cropvalues\r\n\r\n        const formData=new FormData();\r\n\r\n        if(file.Backimage !== \"\" && file.Profileimage !== \"\"){\r\n\r\n            formData.append(\"upload\",file.Backimage);\r\n            formData.append(\"upload\",\"sa\")\r\n            \r\n        }\r\n\r\n        formData.append(\"Profilevalues\",JSON.stringify(values))\r\n        \r\n     \r\n\r\n        try{\r\n\r\n            await axios.post(`/upload/x/x/x/x`,formData);\r\n   \r\n         }catch(err){\r\n   \r\n            return console.log(\"UPLOAD ERRORRRRRRR\");\r\n            \r\n         }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Black onClick={closefunc} aktif={active}/>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Backimg\" src={src[\"Backimage\"]}></img>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"Profileimg\" src={src[\"Profileimage\"]}></img>\r\n            <Exterior getcropper={iscropperactive} active={active}>\r\n                <Inner>\r\n                    {\r\n                        iscropperactive \r\n                        \r\n                        ? \r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <Cropper  style={{backgroundColor:\"red\",height:\"350px\",width:\"300px\"}}  imageStyle={{height:\"350px\",width:\"300px\",objectFit:\"cover\"}}  src={src[imagetype]} crop={crop} onChange={(newcrop)=>updatecrop(newcrop)}/> \r\n                                <div style={{textAlign:\"center\"}}>\r\n                                 <Button onClick={()=>ToCanvas()} color=\"secondary\" variant=\"contained\" >Upload the file to server</Button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        :\r\n\r\n                             (<> \r\n                                <Background ImageforBack={result.Backimage.src}>\r\n                                    <div style={{position:\"absolute\",top:\"225px\",right:\"10px\",zIndex:\"1000\"}}>\r\n                                        <Button onClick={()=>Sendupdates()} style={{textTransform:\"capitalize\",borderRadius:\"25px\"}} color=\"secondary\" variant=\"contained\">Kaydet</Button>\r\n                                    </div>\r\n                                    <Labelimage  htmlFor=\"file\"></Labelimage>\r\n                                    <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                    <input onChange={(e)=>Updatefile(e,\"Backimage\")} name=\"upload\" accept=\"image/png, image/gif, image/jpeg\" id=\"file\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                </Background>\r\n                                <ProfileImageholder>\r\n                                    <Porfileimage style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} width=\"80px\" height=\"80px\" profile={result.Profileimage.src}>\r\n                                        <Labelimage htmlFor=\"file2\"></Labelimage>\r\n                                        <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                        <input onChange={(e)=>Updatefile(e,\"Profileimage\")} accept=\"image/png, image/gif, image/jpeg\" id=\"file2\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                    </Porfileimage>\r\n                                </ProfileImageholder>\r\n                                <Information>\r\n                                    {\r\n                                        Object.keys(userinfo).map((item,index)=>{\r\n\r\n                                            return (<Inputholder>\r\n                                                        <TextField\r\n                                                        multiline={userinfo[item].multiline}\r\n                                                        rows={4}\r\n                                                        onChange={(e)=>Inputhandler(item,e)}\r\n                                                        style={{width:\"100%\"}}\r\n                                                        label={userinfo[item].label}\r\n                                                        variant=\"outlined\"\r\n                                                        value={userinfo[item].value}\r\n                                                        ></TextField>\r\n                                                </Inputholder>)\r\n                                        })\r\n                                    }\r\n                                </Information>\r\n                        </>)\r\n                    }\r\n                       \r\n        \r\n                </Inner>\r\n            </Exterior>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}