{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\containers\\\\Layout\\\\routerguard.js\";\nimport React, { Children, useContext, useEffect, useState } from 'react';\nimport { useRouter } from \"next/router\";\nimport { createusercontext } from \"../../context/Usercontext\";\nexport default function Routerguard({\n  children\n}) {\n  const myrouter = useRouter();\n  const {\n    0: controller,\n    1: setcontroller\n  } = useState(false);\n  const {\n    userdata\n  } = useContext(createusercontext);\n  console.log(myrouter.query);\n  const Token = localStorage.getItem(\"TOKEN\");\n  useEffect(() => {\n    //eğer token varsa buraya giricek token yoksa\n    //userdata tekrar yüklendigi zaman koymam lazım\n    if (userdata.UserId) {\n      if (myrouter.pathname == \"/[userıd]/saved\" || myrouter.pathname == \"/[userıd]/liked\") {\n        if (myrouter.query.userıd == userdata.UserId) {\n          setcontroller(true);\n        } else {\n          myrouter.push(\"/404\");\n        }\n      } else if (myrouter.pathname == \"/[userıd]/saved\") {} else {\n        setcontroller(true);\n      }\n    }\n  }, [userdata]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: controller ? children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/containers/Layout/routerguard.js"],"names":["React","Children","useContext","useEffect","useState","useRouter","createusercontext","Routerguard","children","myrouter","controller","setcontroller","userdata","console","log","query","Token","localStorage","getItem","UserId","pathname","userıd","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAgC;AAE3C,QAAMC,QAAQ,GAAGJ,SAAS,EAA1B;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAYC;AAAZ,MAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaV,UAAU,CAACI,iBAAD,CAA7B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,KAArB;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEAf,EAAAA,SAAS,CAAC,MAAI;AACX;AACA;AACK,QAAGS,QAAQ,CAACO,MAAZ,EAAmB;AAEf,UAAGV,QAAQ,CAACW,QAAT,IAAqB,iBAArB,IAA0CX,QAAQ,CAACW,QAAT,IAAqB,iBAAlE,EAAoF;AAEhF,YAAGX,QAAQ,CAACM,KAAT,CAAeM,MAAf,IAAyBT,QAAQ,CAACO,MAArC,EAA4C;AAExCR,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,SAJD,MAKI;AACAF,UAAAA,QAAQ,CAACa,IAAT,CAAc,MAAd;AACH;AAEJ,OAXD,MAYK,IAAGb,QAAQ,CAACW,QAAT,IAAqB,iBAAxB,EAA0C,CAE9C,CAFI,MAGD;AACAT,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;AAER,GAzBQ,EAyBP,CAACC,QAAD,CAzBO,CAAT;AA4BA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACMF,UAAU,GAAGF,QAAH,GAAc;AAD9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH","sourcesContent":["import React, { Children, useContext, useEffect, useState } from 'react'\r\nimport {useRouter} from \"next/router\"\r\nimport {createusercontext} from \"../../context/Usercontext\"\r\n\r\nexport default function Routerguard({children}){\r\n\r\n    const myrouter = useRouter();\r\n    const [controller,setcontroller]=useState(false);\r\n    const {userdata} = useContext(createusercontext);\r\n\r\n    console.log(myrouter.query)\r\n    const Token = localStorage.getItem(\"TOKEN\");\r\n\r\n    useEffect(()=>{\r\n       //eğer token varsa buraya giricek token yoksa\r\n       //userdata tekrar yüklendigi zaman koymam lazım\r\n            if(userdata.UserId){\r\n\r\n                if(myrouter.pathname == \"/[userıd]/saved\" || myrouter.pathname == \"/[userıd]/liked\"){\r\n                \r\n                    if(myrouter.query.userıd == userdata.UserId){\r\n            \r\n                        setcontroller(true);\r\n            \r\n                    }\r\n                    else{\r\n                        myrouter.push(\"/404\");\r\n                    }\r\n                \r\n                }\r\n                else if(myrouter.pathname == \"/[userıd]/saved\"){\r\n                    \r\n                }\r\n                else{\r\n                    setcontroller(true)\r\n                }\r\n            }\r\n\r\n    },[userdata])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n             {controller ? children : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}