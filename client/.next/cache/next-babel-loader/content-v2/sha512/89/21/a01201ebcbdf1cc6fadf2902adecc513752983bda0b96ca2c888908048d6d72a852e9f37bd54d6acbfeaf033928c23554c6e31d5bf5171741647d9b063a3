{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\n\nfunction useClickoutside() {\n  _s();\n\n  var ref = useRef();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setvisible = _useState[1];\n\n  console.log(\"sa\");\n\n  var handleclick = function handleclick(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setvisible(false);\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"click\", handleclick);\n    return function () {\n      document.removeEventListener(\"click\", handleclick);\n    };\n  }, []);\n  return {\n    visible: visible,\n    setvisible: setvisible,\n    ref: ref\n  };\n}\n\n_s(useClickoutside, \"KiKetdsYE6LpN6u/UVWLycuDBFw=\");\n\nexport default useClickoutside;","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/hooks/Clikcoutisde.js"],"names":["React","useEffect","useState","useRef","useClickoutside","ref","visible","setvisible","console","log","handleclick","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,MAAjC,QAA8C,OAA9C;;AAEA,SAASC,eAAT,GAA0B;AAAA;;AAEtB,MAAMC,GAAG,GAAGF,MAAM,EAAlB;;AAFsB,kBAGKD,QAAQ,CAAC,KAAD,CAHb;AAAA,MAGfI,OAHe;AAAA,MAGPC,UAHO;;AAItBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,MAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,KAAD,EAAS;AAEvB,QAAGN,GAAG,CAACO,OAAJ,IAAe,CAACP,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAnB,EAAsD;AAClDP,MAAAA,UAAU,CAAC,KAAD,CAAV;AAGH;AAEJ,GARD;;AAUAN,EAAAA,SAAS,CAAC,YAAI;AAEZc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAkCN,WAAlC;AAEA,WAAO,YAAI;AACTK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAqCP,WAArC;AACD,KAFD;AAID,GARQ,EAQP,EARO,CAAT;AAUA,SAAO;AACLJ,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,UAAU,EAAVA,UAFK;AAGLF,IAAAA,GAAG,EAAHA;AAHK,GAAP;AAKH;;GA9BQD,e;;AAgCT,eAAgBA,eAAhB","sourcesContent":["import React,{useEffect,useState,useRef} from 'react'\r\n\r\nfunction useClickoutside(){\r\n    \r\n    const ref = useRef();\r\n    const [visible,setvisible]=useState(false);\r\n    console.log(\"sa\")\r\n    const handleclick=(event)=>{  \r\n\r\n        if(ref.current && !ref.current.contains(event.target)){\r\n            setvisible(false);\r\n            \r\n            \r\n        }  \r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n      document.addEventListener(\"click\",handleclick);\r\n\r\n      return ()=>{\r\n        document.removeEventListener(\"click\",handleclick);\r\n      }\r\n\r\n    },[])\r\n\r\n    return {\r\n      visible,\r\n      setvisible,\r\n      ref\r\n    }\r\n}\r\n\r\nexport default  useClickoutside;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}