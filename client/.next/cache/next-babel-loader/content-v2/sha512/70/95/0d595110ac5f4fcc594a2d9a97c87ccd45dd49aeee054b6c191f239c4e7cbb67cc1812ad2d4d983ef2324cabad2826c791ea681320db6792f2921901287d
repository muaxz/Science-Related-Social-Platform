{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3001\";\n\nconst Errorhandler = ({\n  data,\n  seterrmsg,\n  setwindow\n}) => {\n  if (data.state == \"success\") {\n    return true;\n  } else {\n    seterrmsg(true);\n    setwindow(true);\n    return false;\n  }\n};\n\nexport const loginreq = async ({\n  setlogged,\n  setuserdata,\n  userdata,\n  router,\n  seterrmsg,\n  setbackenderror,\n  setactive\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/login\", {\n      userdata: userdata\n    });\n    console.log(data);\n\n    if (data.wrong = \"WP\") {\n      setbackenderror(\"WP\");\n      setactive(true);\n    } else if (data.wrong = \"WE\") {\n      setbackenderror(\"WE\");\n      setactive(true);\n    } else {\n      setlogged(true);\n      setuserdata(data.Userdata);\n      localStorage.setItem(\"_TOKEN\", data.token); //http cookie only ile store edicez\n\n      router.push(\"/\");\n    }\n  } catch (err) {\n    seterrmsg(true);\n  }\n};\nexport const resigterreq = async ({\n  setbackenderror,\n  userdata,\n  setactive,\n  seterrmsg\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/register\", {\n      userdata: userdata\n    });\n\n    if (data.exist) {\n      setbackenderror(\"EXİST\");\n      setactive(true);\n    } else {//kayıt olmanız başarılı\n    }\n  } catch (err) {\n    seterrmsg(true);\n  }\n};\nexport const producereq = async ({\n  contentdata,\n  seterrmsg,\n  setwindow,\n  router\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/content/produce\", {\n      contentdata: contentdata\n    });\n\n    if (Errorhandler({\n      data,\n      setwindow,\n      seterrmsg\n    })) {\n      setwindow(true);\n      router.push(\"/profile/content\"); //we route işlemi\n    } else {\n      return;\n    }\n  } catch (err) {\n    seterrmsg(true);\n    console.log(\"burada\");\n  }\n};\nexport const Homereq = async ({\n  contentdata,\n  seterrmsg,\n  currentdata,\n  setwindow,\n  setcontentdata,\n  order\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`content/gethome/${order}`, {\n      contentdata: contentdata\n    });\n    console.log(data);\n\n    if (Errorhandler({\n      data,\n      seterrmsg,\n      setwindow\n    })) {\n      const mutated = [...currentdata];\n      mutated.push(data);\n      setcontentdata(mutated);\n    } else {\n      return;\n    }\n  } catch (error) {\n    seterrmsg(true);\n  }\n};","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/Api/Api.js"],"names":["axios","defaults","baseURL","Errorhandler","data","seterrmsg","setwindow","state","loginreq","setlogged","setuserdata","userdata","router","setbackenderror","setactive","post","console","log","wrong","Userdata","localStorage","setItem","token","push","err","resigterreq","exist","producereq","contentdata","Homereq","currentdata","setcontentdata","order","get","mutated","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL=\"http://localhost:3001\";\r\n\r\nconst Errorhandler=({data,seterrmsg,setwindow})=>{\r\n   if(data.state == \"success\"){\r\n      return true;\r\n   }\r\n   else{\r\n     seterrmsg(true)\r\n     setwindow(true);\r\n     return false;\r\n   }\r\n}\r\nexport const loginreq=async({setlogged,setuserdata,userdata,router,seterrmsg,setbackenderror,setactive})=>{\r\n\r\n    try{\r\n\r\n      const{data}=await axios.post(\"/login\",{userdata:userdata})\r\n      console.log(data);\r\n      if(data.wrong=\"WP\"){\r\n\r\n        setbackenderror(\"WP\")\r\n        setactive(true);\r\n\r\n      }\r\n      else if(data.wrong=\"WE\"){\r\n\r\n        setbackenderror(\"WE\")\r\n        setactive(true);\r\n\r\n      }\r\n      else{\r\n        setlogged(true);\r\n        setuserdata(data.Userdata)\r\n        localStorage.setItem(\"_TOKEN\",data.token);//http cookie only ile store edicez\r\n        router.push(\"/\");\r\n      }\r\n\r\n    }catch(err){\r\n        seterrmsg(true)\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const resigterreq=async({setbackenderror,userdata,setactive,seterrmsg})=>{\r\n    \r\n  try{\r\n    const{data}=await axios.post(\"/register\",{userdata:userdata})\r\n    \r\n    if(data.exist){\r\n        setbackenderror(\"EXİST\")\r\n        setactive(true)\r\n    }\r\n    else{\r\n        //kayıt olmanız başarılı\r\n    }\r\n  }catch(err){\r\n      seterrmsg(true)\r\n  }\r\n}\r\n\r\nexport const producereq=async({contentdata,seterrmsg,setwindow,router})=>{\r\n  try{\r\n    const{data}=await axios.post(\"/content/produce\",{contentdata:contentdata})\r\n    \r\n    if(Errorhandler({data,setwindow,seterrmsg})){\r\n        setwindow(true);\r\n        router.push(\"/profile/content\")\r\n        //we route işlemi\r\n    }\r\n    else{ \r\n       return ;\r\n    }\r\n  }catch(err){\r\n      seterrmsg(true)\r\n      console.log(\"burada\")\r\n  }\r\n}\r\n\r\nexport const Homereq=async({contentdata,seterrmsg,currentdata,setwindow,setcontentdata,order})=>{\r\n  try {\r\n\r\n    const{data}=await axios.get(`content/gethome/${order}`,{contentdata:contentdata})\r\n    console.log(data);\r\n    \r\n    if(Errorhandler({data,seterrmsg,setwindow})){\r\n      \r\n      const mutated=[...currentdata];\r\n      mutated.push(data);\r\n      setcontentdata(mutated);\r\n    }    \r\n    else{\r\n      return;\r\n    }\r\n  \r\n  } catch (error) {\r\n       seterrmsg(true);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}