{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\containers\\\\pages\\\\Home.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Contentcard from \"../../components/shared/Contentcard\";\nimport styled from \"styled-components\";\nimport { Homereq, Createrelationreq } from \"../../Api/Api\";\nimport Usercard from \"../../components/shared/Usercard\";\nimport { Black } from \"../../components/styledcomponents/button\";\nimport { createusercontext } from \"../../context/Usercontext\";\nimport io from \"socket.io-client\";\nimport { FormControl, InputLabel, Select, MenuItem, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Showfollower from \"../../components/pages/Main/Showfoller\";\nimport Leaderboard from '../../components/pages/Main/Leaderboard';\nconst CssTextField = makeStyles({\n  root: {\n    '& .MuiSelect-root': {\n      color: \"black\"\n    }\n  }\n});\nexport default function Home() {\n  const {\n    userdata\n  } = useContext(createusercontext);\n  const {\n    0: contentdata,\n    1: setcontentdata\n  } = useState([]);\n  const {\n    0: order,\n    1: setorder\n  } = useState(10);\n  const {\n    0: errormsg,\n    1: seterror\n  } = useState(false);\n  const {\n    0: activelike,\n    1: setactivelike\n  } = useState();\n  const {\n    0: list,\n    1: setlist\n  } = useState([]);\n  const {\n    0: spinner,\n    1: setspinner\n  } = useState(false);\n  useEffect(() => {\n    setspinner(true);\n    Homereq({\n      currentdata: contentdata,\n      setcontentdata: setcontentdata,\n      order: order,\n      setspinner: setspinner,\n      seterrmsg: seterror\n    });\n  }, [order]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.addEventListener(\"scroll\", e => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        setorder(prev => prev + 10);\n      }\n    });\n    return () => document.removeEventListener(\"scroll\", () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"auto\"\n      });\n    });\n  }, []);\n\n  const createrelation = (postId, attribute, typeofrelation) => {\n    console.log(attribute, postId);\n    Createrelationreq({\n      UserId: userdata.UserId,\n      PostId: postId,\n      attribute: attribute,\n      relationtype: typeofrelation\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [list.length > 0 ? /*#__PURE__*/_jsxDEV(Showfollower, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          maxWidth: \"650px\",\n          margin: \"auto\",\n          height: `${list.length > 0 ? \"100vh\" : \"100%\"}`,\n          overflow: \"hidden\"\n        },\n        children: contentdata.length > 0 ? contentdata.map((item, index) => /*#__PURE__*/_jsxDEV(Contentcard, {\n          postId: item.id,\n          content: item.content,\n          createrelationforsmh: createrelation,\n          showwindow: stateoflist => setlist(stateoflist),\n          like: item.Like //bu bir obje array\n          ,\n          retweet: item.Retweet,\n          comment: item.allcomments,\n          //key numarası\n          profileimage: \"https://images.pexels.com/photos/594610/pexels-photo-594610.jpeg?cs=srgb&dl=pexels-martin-p%C3%A9chy-594610.jpg&fm=jpg\",\n          title: item.title,\n          titleimage: \"yaprak.jpg\",\n          username: \"Duhan\",\n          usersurname: \"Öztürk\" //bir obje props\n          ,\n          subtitle: item.subtitle,\n          date: item.createdAt\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), spinner ? \"..next 10\" : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n/*<Sectionpart>\r\n<div style={{width:\"40%\",marginRight:\"15px\"}}>\r\n    <FormControl size=\"small\" variant=\"standard\" style={{width:\"100%\"}}>\r\n        <InputLabel>Gönderi Türü</InputLabel>\r\n        <Select className={usestyles.root}>\r\n            <MenuItem value=\"Felsefe\">Felsefe</MenuItem>\r\n            <MenuItem value=\"Tarih\">Tarih</MenuItem> \r\n            <MenuItem value=\"Biyoloji\">Tarih</MenuItem>   \r\n        </Select>\r\n    </FormControl>\r\n</div>\r\n\r\n<div style={{width:\"40%\"}}>\r\n    <FormControl size=\"small\" variant=\"standard\" style={{width:\"100%\"}}>\r\n        <InputLabel>Sıralama Ölçütü</InputLabel>\r\n        <Select>\r\n            <MenuItem value=\"Like\">Beğeni Sayısı</MenuItem>\r\n            <MenuItem value=\"Date\">Yüklenme Tarihi</MenuItem> \r\n            <MenuItem value=\"Retweet\">Retweet Sayısı</MenuItem>   \r\n        </Select>\r\n    </FormControl>\r\n</div>\r\n<div style={{marginLeft:\"auto\"}}>\r\n    <Button endIcon={<SearhIcon></SearhIcon>} variant=\"contained\" color=\"secondary\">Ara</Button>\r\n</div>\r\n</Sectionpart>\r\n*/","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/containers/pages/Home.js"],"names":["React","useEffect","useState","useContext","Contentcard","styled","Homereq","Createrelationreq","Usercard","Black","createusercontext","io","FormControl","InputLabel","Select","MenuItem","Button","makeStyles","Showfollower","Leaderboard","CssTextField","root","color","Home","userdata","contentdata","setcontentdata","order","setorder","errormsg","seterror","activelike","setactivelike","list","setlist","spinner","setspinner","currentdata","seterrmsg","window","scrollTo","document","addEventListener","e","innerHeight","scrollY","body","offsetHeight","prev","removeEventListener","top","behavior","createrelation","postId","attribute","typeofrelation","console","log","UserId","PostId","relationtype","length","padding","maxWidth","margin","height","overflow","map","item","index","id","content","stateoflist","Like","Retweet","allcomments","title","subtitle","createdAt"],"mappings":"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","sourcesContent":["import React, {useEffect,useState,useContext} from 'react'\r\nimport Contentcard from \"../../components/shared/Contentcard\";\r\nimport styled from \"styled-components\";\r\nimport {Homereq,Createrelationreq} from \"../../Api/Api\";\r\nimport Usercard from \"../../components/shared/Usercard\";\r\nimport {Black} from \"../../components/styledcomponents/button\"\r\nimport {createusercontext} from \"../../context/Usercontext\";\r\nimport io from \"socket.io-client\";\r\nimport {FormControl,InputLabel,Select,MenuItem,Button} from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Showfollower from \"../../components/pages/Main/Showfoller\";\r\nimport Leaderboard from '../../components/pages/Main/Leaderboard';\r\n\r\n\r\n\r\nconst CssTextField = makeStyles({\r\n    root: {\r\n      '& .MuiSelect-root': {\r\n        color: \"black\"\r\n      }\r\n    }\r\n  });\r\n\r\nexport default function Home(){\r\n   \r\n  \r\n    const {userdata} = useContext(createusercontext)\r\n    const[contentdata,setcontentdata]=useState([]);\r\n    const[order,setorder]=useState(10);\r\n    const[errormsg,seterror]=useState(false);\r\n    const[activelike,setactivelike]=useState()\r\n    const[list,setlist]=useState([]);\r\n    const [spinner,setspinner]=useState(false);\r\n  \r\n    useEffect(()=>{\r\n\r\n        setspinner(true);\r\n        Homereq({\r\n            currentdata:contentdata,\r\n            setcontentdata:setcontentdata,\r\n            order:order,\r\n            setspinner:setspinner,\r\n            seterrmsg:seterror,\r\n        })\r\n\r\n    },[order])\r\n\r\n    useEffect(()=>{\r\n        \r\n        window.scrollTo(0,0);\r\n        document.addEventListener(\"scroll\",(e)=>{\r\n            \r\n            if((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n                \r\n                setorder(prev=>prev+10);\r\n            }\r\n        })\r\n        \r\n       return ()=> document.removeEventListener(\"scroll\",()=>{\r\n                     window.scrollTo({top:0,behavior:\"auto\"})\r\n                   })\r\n\r\n    },[])\r\n\r\n    const createrelation=(postId,attribute,typeofrelation)=>{\r\n        \r\n        console.log(attribute,postId)\r\n\r\n        Createrelationreq({\r\n            UserId:userdata.UserId,\r\n            PostId:postId,\r\n            attribute:attribute,\r\n            relationtype:typeofrelation\r\n        })\r\n    }\r\n   \r\n   \r\n\r\n    return (\r\n        <div> \r\n            <div>\r\n                { list.length > 0 ?\r\n                 <Showfollower></Showfollower>\r\n                : null\r\n                }\r\n                <Leaderboard></Leaderboard>\r\n                <div style={{padding:\"10px\",maxWidth:\"650px\",margin:\"auto\",height:`${list.length > 0 ? \"100vh\" : \"100%\"}`,overflow:\"hidden\"}}>\r\n                    {\r\n                  \r\n                    contentdata.length > 0 ?\r\n                    contentdata.map((item,index)=>(\r\n                        <Contentcard \r\n                        postId={item.id}\r\n                        content={item.content}\r\n                        createrelationforsmh={createrelation}\r\n                        showwindow={(stateoflist)=>setlist(stateoflist)}\r\n                        like={item.Like}//bu bir obje array\r\n                        retweet={item.Retweet}\r\n                        comment={item.allcomments}\r\n                        key={index}//key numarası\r\n                        profileimage={\"https://images.pexels.com/photos/594610/pexels-photo-594610.jpeg?cs=srgb&dl=pexels-martin-p%C3%A9chy-594610.jpg&fm=jpg\"}\r\n                        title={item.title}\r\n                        titleimage={\"yaprak.jpg\"}\r\n                        username={\"Duhan\"}\r\n                        usersurname={\"Öztürk\"}//bir obje props\r\n                        subtitle={item.subtitle}\r\n                        date={item.createdAt}\r\n                        />\r\n                    ))\r\n                    : \"Loading...\"\r\n                    }\r\n                </div>\r\n                {\r\n                    spinner ? \"..next 10\" : null\r\n                }\r\n           </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\n/*<Sectionpart>\r\n<div style={{width:\"40%\",marginRight:\"15px\"}}>\r\n    <FormControl size=\"small\" variant=\"standard\" style={{width:\"100%\"}}>\r\n        <InputLabel>Gönderi Türü</InputLabel>\r\n        <Select className={usestyles.root}>\r\n            <MenuItem value=\"Felsefe\">Felsefe</MenuItem>\r\n            <MenuItem value=\"Tarih\">Tarih</MenuItem> \r\n            <MenuItem value=\"Biyoloji\">Tarih</MenuItem>   \r\n        </Select>\r\n    </FormControl>\r\n</div>\r\n\r\n<div style={{width:\"40%\"}}>\r\n    <FormControl size=\"small\" variant=\"standard\" style={{width:\"100%\"}}>\r\n        <InputLabel>Sıralama Ölçütü</InputLabel>\r\n        <Select>\r\n            <MenuItem value=\"Like\">Beğeni Sayısı</MenuItem>\r\n            <MenuItem value=\"Date\">Yüklenme Tarihi</MenuItem> \r\n            <MenuItem value=\"Retweet\">Retweet Sayısı</MenuItem>   \r\n        </Select>\r\n    </FormControl>\r\n</div>\r\n<div style={{marginLeft:\"auto\"}}>\r\n    <Button endIcon={<SearhIcon></SearhIcon>} variant=\"contained\" color=\"secondary\">Ara</Button>\r\n</div>\r\n</Sectionpart>\r\n*/"]},"metadata":{},"sourceType":"module"}