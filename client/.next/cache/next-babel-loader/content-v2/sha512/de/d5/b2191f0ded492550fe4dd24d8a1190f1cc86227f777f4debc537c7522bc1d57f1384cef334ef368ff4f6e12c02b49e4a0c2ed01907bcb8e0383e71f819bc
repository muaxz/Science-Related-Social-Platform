{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\pages\\\\Content\\\\Commentsection\\\\Commentpart.js\";\nimport React from 'react';\nimport Writecomment from \"./writecomment\";\nimport Belowcomment from \"./belowcomment\";\nvar rendered = 0;\n\nfunction Commentpart({\n  Editcommenthandler,\n  Producecomment,\n  list,\n  spinner,\n  handleanswer\n}) {\n  const mutated = [...list];\n  const numobj = {};\n\n  for (let i = 0; i < list.length; i++) {\n    numobj[i] = 0;\n  }\n\n  const Lengthcalcualter = (comment, MainparentID, index, answerTo) => {\n    var Topcomment = \"\";\n\n    if (comment.ContentId !== null) {\n      Topcomment = comment;\n    }\n\n    comment.Mainparent = MainparentID;\n    comment.AnswerTo = answerTo;\n\n    if (comment.takeit.length > 0) {\n      numobj[index] += comment.takeit.length;\n      comment.takeit.forEach(element => {\n        Lengthcalcualter(element, MainparentID, index, comment.user.firstname);\n      });\n    } else return;\n\n    if (Topcomment !== \"\") {\n      Topcomment[\"allchilds\"] = numobj[index];\n    }\n  };\n\n  for (let i = 0; i < mutated.length; i++) {\n    Lengthcalcualter(mutated[i], mutated[i].id, i, \"\");\n  }\n\n  console.log(numobj);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Writecomment, {\n      spinner: spinner,\n      Producecomment: Producecomment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Belowcomment, {\n      Editcommenthandler: Editcommenthandler,\n      Answerhandler: handleanswer,\n      mylist: mutated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\nexport default /*#__PURE__*/React.memo(Commentpart);","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/pages/Content/Commentsection/Commentpart.js"],"names":["React","Writecomment","Belowcomment","rendered","Commentpart","Editcommenthandler","Producecomment","list","spinner","handleanswer","mutated","numobj","i","length","Lengthcalcualter","comment","MainparentID","index","answerTo","Topcomment","ContentId","Mainparent","AnswerTo","takeit","forEach","element","user","firstname","id","console","log","padding","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,kBAAD;AAAoBC,EAAAA,cAApB;AAAmCC,EAAAA,IAAnC;AAAwCC,EAAAA,OAAxC;AAAgDC,EAAAA;AAAhD,CAArB,EAAmF;AAG/E,QAAMC,OAAO,GAAG,CAAC,GAAGH,IAAJ,CAAhB;AAGA,QAAMI,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAElCD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,CAAZ;AAEH;;AAED,QAAME,gBAAgB,GAAG,CAACC,OAAD,EAASC,YAAT,EAAsBC,KAAtB,EAA4BC,QAA5B,KAAuC;AAExD,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAGJ,OAAO,CAACK,SAAR,KAAsB,IAAzB,EAA8B;AAC1BD,MAAAA,UAAU,GAAGJ,OAAb;AACH;;AACDA,IAAAA,OAAO,CAACM,UAAR,GAAqBL,YAArB;AACAD,IAAAA,OAAO,CAACO,QAAR,GAAmBJ,QAAnB;;AAGA,QAAGH,OAAO,CAACQ,MAAR,CAAeV,MAAf,GAAwB,CAA3B,EAA6B;AACzBF,MAAAA,MAAM,CAACM,KAAD,CAAN,IAAiBF,OAAO,CAACQ,MAAR,CAAeV,MAAhC;AACAE,MAAAA,OAAO,CAACQ,MAAR,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAC9BX,QAAAA,gBAAgB,CAACW,OAAD,EAAST,YAAT,EAAsBC,KAAtB,EAA4BF,OAAO,CAACW,IAAR,CAAaC,SAAzC,CAAhB;AACH,OAFD;AAGH,KALD,MAMK;;AAEL,QAAGR,UAAU,KAAK,EAAlB,EAAqB;AACjBA,MAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BR,MAAM,CAACM,KAAD,CAAhC;AACH;AACR,GAtBD;;AAwBA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AAErCE,IAAAA,gBAAgB,CAACJ,OAAO,CAACE,CAAD,CAAR,EAAYF,OAAO,CAACE,CAAD,CAAP,CAAWgB,EAAvB,EAA0BhB,CAA1B,EAA4B,EAA5B,CAAhB;AACH;;AAEDiB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACoB,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEvB,OAAvB;AAAgC,MAAA,cAAc,EAAEF;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,kBAAkB,EAAED,kBAAlC;AAAsD,MAAA,aAAa,EAAEI,YAArE;AAAmF,MAAA,MAAM,EAAEC;AAA3F;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AAED,4BAAeV,KAAK,CAACgC,IAAN,CAAW5B,WAAX,CAAf","sourcesContent":["import React from 'react'\r\nimport Writecomment from \"./writecomment\";\r\nimport Belowcomment from \"./belowcomment\";\r\n\r\nvar rendered = 0\r\n\r\nfunction Commentpart({Editcommenthandler,Producecomment,list,spinner,handleanswer}){\r\n    \r\n\r\n    const mutated = [...list]\r\n  \r\n    \r\n    const numobj = {}\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        \r\n        numobj[i] = 0\r\n        \r\n    }\r\n\r\n    const Lengthcalcualter = (comment,MainparentID,index,answerTo)=>{\r\n\r\n            var Topcomment = \"\"\r\n\r\n            if(comment.ContentId !== null){\r\n                Topcomment = comment\r\n            }\r\n            comment.Mainparent = MainparentID\r\n            comment.AnswerTo = answerTo\r\n            \r\n\r\n            if(comment.takeit.length > 0){\r\n                numobj[index] += comment.takeit.length\r\n                comment.takeit.forEach(element => {\r\n                    Lengthcalcualter(element,MainparentID,index,comment.user.firstname)\r\n                });\r\n            }\r\n            else return\r\n\r\n            if(Topcomment !== \"\"){\r\n                Topcomment[\"allchilds\"] = numobj[index]\r\n            }\r\n    }\r\n\r\n    for (let i = 0; i < mutated.length; i++) {\r\n        \r\n        Lengthcalcualter(mutated[i],mutated[i].id,i,\"\")\r\n    }\r\n\r\n    console.log(numobj)\r\n\r\n    return (\r\n        <div style={{padding:\"20px\"}}>\r\n            <Writecomment spinner={spinner} Producecomment={Producecomment}></Writecomment>\r\n            <Belowcomment Editcommenthandler={Editcommenthandler} Answerhandler={handleanswer} mylist={mutated}></Belowcomment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Commentpart)\r\n"]},"metadata":{},"sourceType":"module"}