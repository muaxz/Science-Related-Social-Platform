{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\containers\\\\Layout\\\\mainlayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport styled from \"styled-components\";\nimport Lefttoolbar from \"../../components/shared/Lefttoolbar\";\nimport Navigation from \"../../components/shared/Navigation/Navigation\";\nimport { Global } from \"../../components/styledcomponents/button\";\nimport { Black } from \"../../components/styledcomponents/button\";\nimport { createusercontext } from \"../../context/Usercontext\";\nimport { useRouter } from \"next/router\";\nimport io from \"socket.io-client\";\nimport { NotificationCountreq, Notificationreq, UpdateNotificationcount } from \"../../Api/Api\";\nvar Bigdiv = styled.div.withConfig({\n  displayName: \"mainlayout__Bigdiv\",\n  componentId: \"sc-1umognl-0\"\n})([\"padding-top:80px;\"]);\n_c = Bigdiv;\nvar socket = io(\"http://localhost:3001\");\nexport default function Mainlayout(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setactive = _useState[1];\n\n  var _useContext = useContext(createusercontext),\n      userdata = _useContext.userdata;\n\n  var _useState2 = useState([]),\n      navdata = _useState2[0],\n      setnavdata = _useState2[1];\n\n  var _useState3 = useState(0),\n      countofdata = _useState3[0],\n      setcountdata = _useState3[1];\n\n  var userouter = useRouter();\n  useEffect(function () {\n    setactive(false);\n  }, [userouter.query]);\n  useEffect(function () {\n    if (userdata.UserId) {\n      NotificationCountreq({\n        setcountdata: setcountdata,\n        UserId: userdata.UserId\n      });\n      Notificationreq({\n        setnavdata: setnavdata,\n        UserId: userdata.UserId,\n        order: 10,\n        navdata: navdata,\n        lastrow: false\n      });\n    }\n  }, [userdata]);\n  useEffect(function () {\n    socket.on(\"Notification\", function (data) {\n      //ToDo last record will be taken\n      if (userdata.UserId) {\n        NotificationCountreq({\n          setcountdata: setcountdata,\n          UserId: userdata.UserId\n        });\n        Notificationreq({\n          setnavdata: setnavdata,\n          UserId: userdata.UserId,\n          order: countofdata,\n          navdata: navdata,\n          lastrow: true\n        });\n      }\n    });\n  }, [userdata]);\n\n  var Reloadnav = function Reloadnav(order) {\n    Notificationreq({\n      setnavdata: setnavdata,\n      UserId: userdata.UserId,\n      order: order,\n      navdata: navdata,\n      lastrow: false\n    });\n  };\n\n  var Updatecount = function Updatecount() {\n    setcountdata(0);\n    UpdateNotificationcount();\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(Bigdiv, {\n    children: [/*#__PURE__*/_jsxDEV(Black, {\n      onClick: function onClick() {\n        return setactive(false);\n      },\n      aktif: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      Update: Updatecount,\n      Reloadfunc: Reloadnav,\n      Count: countofdata,\n      Data: navdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lefttoolbar, {\n      myactive: active,\n      makeactive: setactive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainlayout, \"XcrPOsWj9Wd4KVtgfCKZXWFFUqY=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = Mainlayout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bigdiv\");\n$RefreshReg$(_c2, \"Mainlayout\");","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/containers/Layout/mainlayout.js"],"names":["React","useState","useEffect","useContext","styled","Lefttoolbar","Navigation","Global","Black","createusercontext","useRouter","io","NotificationCountreq","Notificationreq","UpdateNotificationcount","Bigdiv","div","socket","Mainlayout","children","active","setactive","userdata","navdata","setnavdata","countofdata","setcountdata","userouter","query","UserId","order","lastrow","on","data","Reloadnav","Updatecount"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\nimport styled from \"styled-components\";\r\nimport Lefttoolbar from \"../../components/shared/Lefttoolbar\";\r\nimport Navigation from \"../../components/shared/Navigation/Navigation\";\r\nimport {Global} from \"../../components/styledcomponents/button\";\r\nimport {Black} from \"../../components/styledcomponents/button\"\r\nimport {createusercontext} from \"../../context/Usercontext\";\r\nimport {useRouter} from \"next/router\"\r\nimport io from \"socket.io-client\";\r\nimport {NotificationCountreq,Notificationreq,UpdateNotificationcount} from \"../../Api/Api\"\r\n\r\n\r\nconst Bigdiv=styled.div`\r\npadding-top:80px;\r\n`\r\n\r\nconst socket=io(\"http://localhost:3001\");\r\n\r\nexport default function Mainlayout({children}) {\r\n\r\n    const [active,setactive]=useState(false);\r\n    const {userdata} = useContext(createusercontext)\r\n    const [navdata,setnavdata]=useState([]);\r\n    const [countofdata,setcountdata]=useState(0);\r\n    const userouter=useRouter();\r\n\r\n    useEffect(() => {\r\n        setactive(false);  \r\n    }, [userouter.query])\r\n    \r\n   \r\n    useEffect(()=>{\r\n\r\n       if(userdata.UserId){\r\n\r\n            NotificationCountreq({\r\n                setcountdata:setcountdata,\r\n                UserId:userdata.UserId\r\n            })\r\n\r\n            Notificationreq({\r\n                setnavdata:setnavdata,\r\n                UserId:userdata.UserId,\r\n                order:10,\r\n                navdata:navdata,\r\n                lastrow:false,\r\n            })\r\n\r\n       }   \r\n\r\n    },[userdata])\r\n    \r\n    useEffect(()=>{\r\n    \r\n        socket.on(\"Notification\",(data)=>{\r\n             //ToDo last record will be taken\r\n             if(userdata.UserId){\r\n\r\n                NotificationCountreq({\r\n                    setcountdata:setcountdata,\r\n                    UserId:userdata.UserId\r\n                })\r\n                Notificationreq({\r\n                    setnavdata:setnavdata,\r\n                    UserId:userdata.UserId,\r\n                    order:countofdata,\r\n                    navdata:navdata,\r\n                    lastrow:true,\r\n                })\r\n\r\n             }\r\n        })\r\n\r\n    },[userdata])\r\n\r\n    const Reloadnav=(order)=>{\r\n\r\n        Notificationreq({\r\n            setnavdata:setnavdata,\r\n            UserId:userdata.UserId,\r\n            order:order,\r\n            navdata:navdata,\r\n            lastrow:false,\r\n        })\r\n\r\n    }\r\n\r\n    const Updatecount=()=>{\r\n        setcountdata(0);\r\n        UpdateNotificationcount();\r\n    }\r\n    //\r\n    return (\r\n        <Bigdiv>\r\n            <Black onClick={()=>setactive(false)} aktif={active}></Black>\r\n            <Navigation Update={Updatecount} Reloadfunc={Reloadnav} Count={countofdata} Data={navdata}></Navigation>\r\n            <Lefttoolbar myactive={active} makeactive={setactive}></Lefttoolbar>\r\n            {/*this part will be changed*/}\r\n            <Global></Global>\r\n            {children}\r\n        </Bigdiv>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}