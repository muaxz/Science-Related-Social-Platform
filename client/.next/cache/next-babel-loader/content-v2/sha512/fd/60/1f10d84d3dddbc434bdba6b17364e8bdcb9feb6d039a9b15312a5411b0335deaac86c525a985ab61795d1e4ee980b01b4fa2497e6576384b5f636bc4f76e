{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\containers\\\\pages\\\\Post.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nconst Ckeholder = styled.div.withConfig({\n  displayName: \"Post__Ckeholder\",\n  componentId: \"sah6n7-0\"\n})([\"margin:20px auto;max-width:500px;\"]);\nexport default function MyEditor() {\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false);\n  const {\n    CKE,\n    ClassicEditor\n  } = editorRef.current || {};\n  const {\n    0: content,\n    1: setcontent\n  } = useState(\"\");\n  useEffect(() => {\n    const {\n      CKEditor\n    } = require('@ckeditor/ckeditor5-react');\n\n    editorRef.current = {\n      CKE: CKEditor,\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  const changehandler = (event, editör) => {\n    const data = editör.getData();\n    setcontent(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Ckeholder, {\n    children: editorLoaded ? /*#__PURE__*/_jsxDEV(CKE, {\n      config: {\n        placeholder: \"Placeholder text...\" //toolbar:['heading', '|', 'bold', 'italic', 'blockQuote', 'link', 'numberedList']\n\n      },\n      editor: ClassicEditor,\n      onChange: changehandler,\n      data: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Editor loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/containers/pages/Post.js"],"names":["React","useRef","useState","useEffect","styled","Ckeholder","div","MyEditor","editorRef","editorLoaded","setEditorLoaded","CKE","ClassicEditor","current","content","setcontent","CKEditor","require","changehandler","event","editör","data","getData","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,QAArB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,SAAS,GAACD,MAAM,CAACE,GAAR;AAAA;AAAA;AAAA,yCAAf;AAIA,eAAe,SAASC,QAAT,GAAqB;AAChC,QAAMC,SAAS,GAAGP,MAAM,EAAxB;AACA,QAAM;AAAA,OAAEQ,YAAF;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAE,KAAF,CAAlD;AACA,QAAM;AAAES,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAyBJ,SAAS,CAACK,OAAV,IAAqB,EAApD;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAqBb,QAAQ,CAAC,EAAD,CAAnC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM;AAACa,MAAAA;AAAD,QAAWC,OAAO,CAAE,2BAAF,CAAxB;;AACAT,IAAAA,SAAS,CAACK,OAAV,GAAoB;AAChBF,MAAAA,GAAG,EAAEK,QADW;AAEhBJ,MAAAA,aAAa,EAAEK,OAAO,CAAE,mCAAF;AAFN,KAApB;AAMFP,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMQ,aAAa,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACjC,UAAMC,IAAI,GAACD,MAAM,CAACE,OAAP,EAAX;AACAP,IAAAA,UAAU,CAACM,IAAD,CAAV;AACF,GAHD;;AAIA,sBACI,QAAC,SAAD;AAAA,cAEQZ,YAAY,gBACR,QAAC,GAAD;AACE,MAAA,MAAM,EACF;AACEc,QAAAA,WAAW,EAAE,qBADf,CAEE;;AAFF,OAFN;AAOE,MAAA,MAAM,EAAGX,aAPX;AAQE,MAAA,QAAQ,EAAEM,aARZ;AASE,MAAA,IAAI,EAAEJ;AATR;AAAA;AAAA;AAAA;AAAA,YADQ,gBAaR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH","sourcesContent":["import React,{useRef,useState,useEffect} from 'react'\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Ckeholder=styled.div`\r\nmargin:20px auto;\r\nmax-width:500px;\r\n`\r\nexport default function MyEditor () {\r\n    const editorRef = useRef()\r\n    const [ editorLoaded, setEditorLoaded ] = useState( false )\r\n    const { CKE, ClassicEditor } = editorRef.current || {}\r\n    const [content,setcontent]=useState(\"\");\r\n    useEffect(()=>{\r\n        const {CKEditor}=require( '@ckeditor/ckeditor5-react' )\r\n        editorRef.current = {\r\n            CKE: CKEditor,\r\n            ClassicEditor: require( '@ckeditor/ckeditor5-build-classic' )\r\n        }\r\n\r\n\r\n      setEditorLoaded(true)\r\n    }, [] )\r\n  \r\n    const changehandler=(event,editör)=>{\r\n       const data=editör.getData();\r\n       setcontent(data);\r\n    }\r\n    return (\r\n        <Ckeholder >\r\n            {\r\n                editorLoaded ? (\r\n                    <CKE \r\n                      config={\r\n                          {\r\n                            placeholder: \"Placeholder text...\",\r\n                            //toolbar:['heading', '|', 'bold', 'italic', 'blockQuote', 'link', 'numberedList']\r\n                          }\r\n                        } \r\n                      editor={ ClassicEditor }\r\n                      onChange={changehandler}\r\n                      data={content}\r\n                    />\r\n                  ) : (\r\n                    <div>Editor loading</div>\r\n                  )\r\n            }\r\n        </Ckeholder>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}