{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\UI\\\\window.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { Black } from \"../styledcomponents/button\";\nimport { Button } from \"@material-ui/core\";\nimport { Error } from \"@material-ui/icons\";\nconst External = styled.div.withConfig({\n  displayName: \"window__External\",\n  componentId: \"o1iyjf-0\"\n})([\"position:absolute;left:50%;transform:translate(-50%,-50%);width:300px;height:200px;text-align:center;transition:top 0.4s;top:\", \";z-index:\", \";background-color:white;border-radius:10px;\"], ({\n  aktif\n}) => aktif ? \"50%\" : \"200px\", ({\n  aktif\n}) => aktif ? \"180\" : \"-200\");\nconst Textbox = styled.div.withConfig({\n  displayName: \"window__Textbox\",\n  componentId: \"o1iyjf-1\"\n})([\"width:80%;margin:30px auto;text-align:center;\"]);\n\nconst Window = ({\n  children,\n  type,\n  active\n}) => {\n  const {\n    0: windowactive,\n    1: setwindowactive\n  } = useState(true);\n  var icon = null;\n\n  if (type == \"error\") {\n    icon = /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-exclamation-circle fa-2x\",\n      style: {\n        color: \"red\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else if (type == \"confirm\") {\n    icon = /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-check-circle fa-2x\",\n      style: {\n        color: \"green\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  useEffect(() => {\n    if (active == true) {\n      setwindowactive(true);\n    }\n  }, [active]);\n\n  const windowhandler = () => {\n    setwindowactive(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: active ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Black, {\n        onClick: windowhandler,\n        aktif: windowactive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(External, {\n        aktif: windowactive,\n        children: [/*#__PURE__*/_jsxDEV(Textbox, {\n          children: [icon, /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center',\n              wordWrap: 'break-word',\n              lineHeight: \"25px\"\n            },\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: windowhandler,\n            variant: \"contained\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 8\n  }, this);\n};\n\nexport default Window;","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/UI/window.js"],"names":["React","useState","useEffect","styled","Black","Button","Error","External","div","aktif","Textbox","Window","children","type","active","windowactive","setwindowactive","icon","color","marginBottom","windowhandler","textAlign","wordWrap","lineHeight","paddingTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,KAAR,QAAoB,4BAApB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,KAAR,QAAoB,oBAApB;AAEA,MAAMC,QAAQ,GAACJ,MAAM,CAACK,GAAR;AAAA;AAAA;AAAA,kMAQR,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAWA,KAAK,GAAG,KAAH,GAAW,OARnB,EASJ,CAAC;AAACA,EAAAA;AAAD,CAAD,KAAWA,KAAK,GAAG,KAAH,GAAW,MATvB,CAAd;AAcA,MAAMC,OAAO,GAACP,MAAM,CAACK,GAAR;AAAA;AAAA;AAAA,qDAAb;;AAOA,MAAMG,MAAM,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,IAAV;AAAeC,EAAAA;AAAf,CAAD,KAA0B;AAEnC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAcC;AAAd,MAA+Bf,QAAQ,CAAC,IAAD,CAA7C;AAEA,MAAIgB,IAAI,GAAE,IAAV;;AACA,MAAGJ,IAAI,IAAI,OAAX,EAAmB;AAChBI,IAAAA,IAAI,gBAAC;AAAG,MAAA,SAAS,EAAC,iCAAb;AAA+C,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,YAAY,EAAC;AAA1B;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAL;AACF,GAFD,MAGK,IAAGN,IAAI,IAAI,SAAX,EAAqB;AACvBI,IAAAA,IAAI,gBAAC;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAyC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,YAAY,EAAC;AAA5B;AAAhD;AAAA;AAAA;AAAA;AAAA,YAAL;AACF;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AAEb,QAAGY,MAAM,IAAI,IAAb,EAAkB;AACfE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACF;AAEH,GANQ,EAMN,CAACF,MAAD,CANM,CAAT;;AAQA,QAAMM,aAAa,GAAC,MAAI;AACpBJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAFD;;AAIA,sBACG,QAAC,KAAD,CAAO,QAAP;AAAA,cAEMF,MAAM,gBACN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,aAAhB;AAA+B,QAAA,KAAK,EAAEL;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,YAAjB;AAAA,gCACG,QAAC,OAAD;AAAA,qBACOE,IADP,eAEM;AAAG,YAAA,KAAK,EAAE;AAACI,cAAAA,SAAS,EAAC,QAAX;AAAoBC,cAAAA,QAAQ,EAAC,YAA7B;AAA0CC,cAAAA,UAAU,EAAC;AAArD,aAAV;AAAA,sBACIX;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAOG;AAAK,UAAA,KAAK,EAAE;AAACY,YAAAA,UAAU,EAAC;AAAZ,WAAZ;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEJ,aAAjB;AAAgC,YAAA,OAAO,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAcE;AAhBd;AAAA;AAAA;AAAA;AAAA,UADH;AAqBH,CA7CD;;AAgDA,eAAeT,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport styled from \"styled-components\";\r\nimport {Black} from \"../styledcomponents/button\";\r\nimport {Button} from \"@material-ui/core\"\r\nimport {Error} from \"@material-ui/icons\"\r\n\r\nconst External=styled.div`\r\nposition:absolute;\r\nleft:50%;\r\ntransform:translate(-50%,-50%);\r\nwidth:300px;\r\nheight:200px;\r\ntext-align:center;\r\ntransition:top 0.4s;\r\ntop:${({aktif})=>aktif ? \"50%\" : \"200px\"};\r\nz-index:${({aktif})=>aktif ? \"180\" : \"-200\"};\r\nbackground-color:white;\r\nborder-radius:10px;\r\n`\r\n\r\nconst Textbox=styled.div`\r\nwidth:80%;\r\nmargin:30px auto;\r\ntext-align:center;\r\n\r\n`\r\n\r\nconst Window=({children,type,active})=>{\r\n\r\n    const [windowactive,setwindowactive]=useState(true);\r\n   \r\n    var icon= null;\r\n    if(type == \"error\"){\r\n       icon=<i className=\"fas fa-exclamation-circle fa-2x\" style={{color:\"red\",marginBottom:\"10px\"}}></i>\r\n    }\r\n    else if(type == \"confirm\"){\r\n       icon=<i className=\"fas fa-check-circle fa-2x\" style={{color:\"green\",marginBottom:\"10px\"}}></i>\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n       if(active == true){\r\n          setwindowactive(true);\r\n       }\r\n\r\n    }, [active])\r\n\r\n    const windowhandler=()=>{\r\n        setwindowactive(false)\r\n    }\r\n\r\n    return (\r\n       <React.Fragment>\r\n          {\r\n             active ? \r\n             <div>\r\n               <Black onClick={windowhandler} aktif={windowactive}/>\r\n               <External aktif={windowactive}>\r\n                  <Textbox>\r\n                        {icon}\r\n                        <p style={{textAlign:'center',wordWrap:'break-word',lineHeight:\"25px\"}}>\r\n                           {children}\r\n                        </p>\r\n                  </Textbox>\r\n                  <div style={{paddingTop:\"15px\"}}>\r\n                  <Button onClick={windowhandler} variant=\"contained\">OK</Button>\r\n                  </div>\r\n               </External>\r\n            </div> : null\r\n          }\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Window;\r\n"]},"metadata":{},"sourceType":"module"}