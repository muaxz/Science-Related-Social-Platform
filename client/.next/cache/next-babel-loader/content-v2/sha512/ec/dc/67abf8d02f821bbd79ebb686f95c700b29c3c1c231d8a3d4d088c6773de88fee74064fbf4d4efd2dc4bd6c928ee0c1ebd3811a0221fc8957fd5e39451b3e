{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bexsd\\\\Desktop\\\\nextproject\\\\client\\\\components\\\\pages\\\\Profile\\\\Editwindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CameraAlt } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { Black, Porfileimage } from \"../../styledcomponents/button\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Cropper from \"react-image-crop\";\nimport axios from 'axios';\nimport \"react-image-crop/dist/ReactCrop.css\";\nconst Exterior = styled.div.withConfig({\n  displayName: \"Editwindow__Exterior\",\n  componentId: \"sc-9h7al1-0\"\n})([\"display:\", \";position:absolute;transform:translateX(-50%);left:50%;top:\", \";;max-width:600px;width:90%;height:\", \";background-color:white;border-radius:10px;z-index:1000;overflow:\", \";;\"], ({\n  active\n}) => active ? \"block\" : \"none\", ({\n  getcropper\n}) => getcropper ? \"150px\" : \"70px\", ({\n  getcropper\n}) => getcropper ? \"350px\" : \"580px\", ({\n  getcropper\n}) => getcropper ? \"visible\" : \"auto\");\nconst Inner = styled.div.withConfig({\n  displayName: \"Editwindow__Inner\",\n  componentId: \"sc-9h7al1-1\"\n})([\"position:relative;\"]);\nconst Background = styled.div.withConfig({\n  displayName: \"Editwindow__Background\",\n  componentId: \"sc-9h7al1-2\"\n})([\"display:flex;cursor:pointer;justify-content:center;align-items:center;width:100%;border-top-left-radius:10px;border-top-right-radius:10px;height:200px;opacity:0.8;background-image:url(\", \");background-size:cover;background-repeat:no-repeat;background-position:center;transition:0.4s;&:hover{opacity:1;}\"], ({\n  ImageforBack\n}) => ImageforBack);\nconst ProfileImageholder = styled.div.withConfig({\n  displayName: \"Editwindow__ProfileImageholder\",\n  componentId: \"sc-9h7al1-3\"\n})([\"position:absolute;top:160px;opacity:0.8;left:30px;transition:0.4s;&:hover{opacity:1;}\"]);\nconst Inputholder = styled.div.withConfig({\n  displayName: \"Editwindow__Inputholder\",\n  componentId: \"sc-9h7al1-4\"\n})([\"margin-top:20px;\"]);\nconst Information = styled.div.withConfig({\n  displayName: \"Editwindow__Information\",\n  componentId: \"sc-9h7al1-5\"\n})([\"padding-top:80px;padding-left:20px;padding-right:20px;padding-bottom:20px;\"]);\nconst Labelimage = styled.label.withConfig({\n  displayName: \"Editwindow__Labelimage\",\n  componentId: \"sc-9h7al1-6\"\n})([\"position:absolute;width:100%;height:200px;display:block;padding:6px;padding-left:45px;background-color:white;cursor:pointer;color:black;opacity:0;\"]);\nexport default function Editwindow({\n  active,\n  editdata,\n  closefunc\n}) {\n  const {\n    0: file,\n    1: setfile\n  } = useState(null);\n  const {\n    0: crop,\n    1: setcrop\n  } = useState({\n    aspect: 16 / 16,\n    height: 200,\n    width: 100,\n    x: 50,\n    y: 50\n  });\n  const {\n    0: src,\n    1: setsrc\n  } = useState(null);\n  const {\n    0: image,\n    1: setimage\n  } = useState(\"\");\n  const {\n    0: iscropperactive,\n    1: setcropperactive\n  } = useState(false);\n  const {\n    0: filename,\n    1: setfilename\n  } = useState(null);\n  const {\n    0: userinfo,\n    1: setuserinfo\n  } = useState({\n    username: {\n      value: editdata.username,\n      label: \"Kullanici Adi\",\n      warning: false,\n      multiline: false\n    },\n    firstname: {\n      value: editdata.firstname,\n      label: \"Ad\",\n      warning: false,\n      multiline: false\n    },\n    surname: {\n      value: editdata.lastname,\n      label: \"Soyad\",\n      warning: false,\n      multiline: false\n    },\n    personaltext: {\n      value: editdata.Personaltext,\n      label: \"Kisisel Bilgiler\",\n      warning: false,\n      multiline: true\n    }\n  });\n  useEffect(() => {\n    setcropperactive(false);\n  }, [active]);\n  useEffect(() => {\n    const trial = document.querySelector(\"#trial\");\n    trial.addEventListener(\"load\", () => {\n      console.log(trial.width);\n    });\n  }, [src]);\n\n  const Upload = async () => {\n    const formData = new FormData();\n    formData.append(\"upload\", file);\n\n    try {\n      console.log(crop.width);\n      console.log(crop.height); //move it to api file\n\n      const {\n        data\n      } = await axios.post(`/upload/${crop.width}/${crop.height}/${crop.x}/${crop.y}`, formData);\n      setimage(data.accesurl);\n      console.log(data);\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n\n  const Inputhandler = (key, event) => {\n    const mutated = _objectSpread({}, userinfo);\n\n    mutated[key].value = event.target.value;\n    setuserinfo(mutated);\n  };\n\n  const Updatefile = (event, type) => {\n    if (type == \"back\") {\n      setcrop({\n        aspect: 16 / 9,\n        height: 100,\n        width: 100,\n        unit: \"%\",\n        x: 50,\n        y: 50\n      });\n    } else {\n      setcrop({\n        aspect: 16 / 16,\n        height: 150,\n        width: 150,\n        unit: \"px\",\n        x: 50,\n        y: 50\n      });\n    }\n\n    setcropperactive(true);\n    setsrc(URL.createObjectURL(event.target.files[0]));\n    console.log(URL.createObjectURL(event.target.files[0]));\n    setfile(event.target.files[0]);\n    setfilename(event.target.files[0].name);\n  };\n\n  const updatecrop = newcrop => {\n    console.log(newcrop);\n    setcrop(res => {\n      return _objectSpread(_objectSpread({}, res), {}, {\n        y: newcrop.y\n      });\n    }); //value of cropper width height x and y\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Black, {\n      onClick: closefunc,\n      aktif: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\"\n      },\n      id: \"trial\",\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Exterior, {\n      getcropper: iscropperactive,\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Inner, {\n        children: iscropperactive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Cropper, {\n            imageStyle: {\n              height: \"300px\",\n              width: \"100%\",\n              objectFit: \"cover\"\n            },\n            src: src,\n            crop: crop,\n            onChange: newcrop => updatecrop(newcrop)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => Upload(),\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Upload the file to server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            ImageforBack: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n              htmlFor: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => Updatefile(e, \"back\"),\n              name: \"upload\",\n              accept: \"image/png, image/gif, image/jpeg\",\n              id: \"file\",\n              type: \"file\",\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ProfileImageholder, {\n            children: /*#__PURE__*/_jsxDEV(Porfileimage, {\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              width: \"80px\",\n              height: \"80px\",\n              profile: image,\n              children: [/*#__PURE__*/_jsxDEV(Labelimage, {\n                htmlFor: \"file2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CameraAlt, {\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => Updatefile(e, \"profile\"),\n                accept: \"image/png, image/gif, image/jpeg\",\n                id: \"file2\",\n                type: \"file\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Information, {\n            children: Object.keys(userinfo).map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Inputholder, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: userinfo[item].multiline,\n                  rows: 4,\n                  onChange: e => Inputhandler(item, e),\n                  style: {\n                    width: \"100%\"\n                  },\n                  label: userinfo[item].label,\n                  variant: \"outlined\",\n                  value: userinfo[item].value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 53\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/bexsd/Desktop/nextproject/client/components/pages/Profile/Editwindow.js"],"names":["CameraAlt","React","useState","useEffect","styled","Black","Porfileimage","TextField","Button","Cropper","axios","Exterior","div","active","getcropper","Inner","Background","ImageforBack","ProfileImageholder","Inputholder","Information","Labelimage","label","Editwindow","editdata","closefunc","file","setfile","crop","setcrop","aspect","height","width","x","y","src","setsrc","image","setimage","iscropperactive","setcropperactive","filename","setfilename","userinfo","setuserinfo","username","value","warning","multiline","firstname","surname","lastname","personaltext","Personaltext","trial","document","querySelector","addEventListener","console","log","Upload","formData","FormData","append","data","post","accesurl","err","Inputhandler","key","event","mutated","target","Updatefile","type","unit","URL","createObjectURL","files","name","updatecrop","newcrop","res","visibility","position","textAlign","objectFit","color","e","display","justifyContent","alignItems","Object","keys","map","item","index"],"mappings":"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","sourcesContent":["import { CameraAlt } from '@material-ui/icons'\r\nimport React, { useState,useEffect} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Black,Porfileimage} from \"../../styledcomponents/button\"\r\nimport {TextField,Button} from \"@material-ui/core\"\r\nimport Cropper from  \"react-image-crop\"\r\nimport axios from 'axios'\r\nimport \"react-image-crop/dist/ReactCrop.css\"\r\n\r\nconst Exterior = styled.div`\r\ndisplay:${({active})=>active ? \"block\" : \"none\"};\r\nposition:absolute;\r\ntransform:translateX(-50%);\r\nleft:50%;\r\ntop:${({getcropper})=>getcropper ? \"150px\" : \"70px\"};;\r\nmax-width:600px;\r\nwidth:90%;\r\nheight:${({getcropper})=>getcropper ? \"350px\" : \"580px\"};\r\nbackground-color:white;\r\nborder-radius:10px;\r\nz-index:1000;\r\noverflow:${({getcropper})=>getcropper ? \"visible\" : \"auto\"};;\r\n`\r\nconst Inner = styled.div`\r\nposition:relative;\r\n\r\n`\r\n\r\nconst Background = styled.div`\r\ndisplay:flex;\r\ncursor:pointer;\r\njustify-content:center;\r\nalign-items:center;\r\nwidth:100%;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\nheight:200px;\r\nopacity:0.8;\r\nbackground-image:url(${({ImageforBack})=>ImageforBack});\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position: center; \r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\n\r\nconst ProfileImageholder=styled.div`\r\nposition:absolute;\r\ntop:160px;\r\nopacity:0.8;\r\nleft:30px;\r\ntransition:0.4s;\r\n&:hover{\r\n    opacity:1;\r\n}\r\n`\r\nconst Inputholder = styled.div`\r\nmargin-top:20px;\r\n`\r\nconst Information = styled.div`\r\npadding-top:80px;\r\npadding-left:20px;\r\npadding-right:20px; \r\npadding-bottom:20px;\r\n`\r\n\r\nconst Labelimage=styled.label`\r\nposition:absolute;\r\nwidth:100%;\r\nheight:200px;\r\ndisplay:block;\r\npadding:6px;\r\npadding-left:45px;\r\nbackground-color:white;\r\ncursor:pointer;\r\ncolor:black;\r\nopacity:0;\r\n`\r\n\r\nexport default function Editwindow({active,editdata,closefunc}){\r\n\r\n\r\n    const [file,setfile] = useState(null)\r\n    const [crop,setcrop] = useState({aspect:16/16,height:200,width:100,x:50,y:50})\r\n    const [src,setsrc] = useState(null)\r\n    \r\n    const [image,setimage] = useState(\"\")\r\n    const [iscropperactive,setcropperactive] = useState(false)\r\n    const [filename,setfilename] = useState(null)\r\n    const [userinfo,setuserinfo] = useState({\r\n        username:{\r\n            value:editdata.username,\r\n            label:\"Kullanici Adi\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        firstname:{\r\n            value:editdata.firstname,\r\n            label:\"Ad\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        surname:{\r\n            value:editdata.lastname,\r\n            label:\"Soyad\",\r\n            warning:false,\r\n            multiline:false\r\n        },\r\n        personaltext:{\r\n            value:editdata.Personaltext,\r\n            label:\"Kisisel Bilgiler\",\r\n            warning:false,\r\n            multiline:true\r\n        },\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        setcropperactive(false)\r\n    },[active])\r\n\r\n    useEffect(()=>{\r\n        const trial = document.querySelector(\"#trial\")\r\n        trial.addEventListener(\"load\",()=>{\r\n            console.log(trial.width)\r\n        })\r\n    },[src])\r\n\r\n    const Upload = async ()=>{\r\n\r\n        const formData=new FormData();\r\n\r\n        formData.append(\"upload\",file);\r\n\r\n        try{\r\n\r\n            console.log(crop.width)\r\n            console.log(crop.height)\r\n            //move it to api file\r\n            const {data} = await axios.post(`/upload/${crop.width}/${crop.height}/${crop.x}/${crop.y}`,formData)\r\n            setimage(data.accesurl)\r\n            console.log(data)\r\n            \r\n         }catch(err){ \r\n   \r\n            return console.log(err);\r\n            \r\n         }\r\n\r\n        \r\n    }\r\n\r\n    const Inputhandler = (key,event)=>{\r\n\r\n        const mutated = {...userinfo}\r\n        mutated[key].value=event.target.value\r\n        setuserinfo(mutated)\r\n    }\r\n\r\n    const Updatefile = (event,type)=>{\r\n        if(type == \"back\"){\r\n            setcrop({\r\n                aspect:16/9,\r\n                height:100,\r\n                width:100,\r\n                unit:\"%\",\r\n                x:50,\r\n                y:50\r\n            })\r\n        }\r\n        else{\r\n            setcrop({\r\n                aspect:16/16,\r\n                height:150,\r\n                width:150,\r\n                unit:\"px\",\r\n                x:50,\r\n                y:50\r\n            })\r\n        }\r\n        setcropperactive(true)\r\n        setsrc(URL.createObjectURL(event.target.files[0]))\r\n        console.log(URL.createObjectURL(event.target.files[0]))\r\n        setfile(event.target.files[0])\r\n        setfilename(event.target.files[0].name);\r\n    }\r\n\r\n    const updatecrop = (newcrop)=>{\r\n        console.log(newcrop)\r\n        setcrop((res)=>{\r\n            return {...res,y:newcrop.y}\r\n        })\r\n        //value of cropper width height x and y\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Black onClick={closefunc} aktif={active}/>\r\n            <img style={{visibility:\"hidden\",position:\"absolute\"}} id=\"trial\" src={src}></img>\r\n            <Exterior getcropper={iscropperactive} active={active}>\r\n                <Inner>\r\n                    {\r\n                        iscropperactive \r\n                        \r\n                        ? \r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <Cropper  imageStyle={{height:\"300px\",width:\"100%\",objectFit:\"cover\"}}  src={src} crop={crop} onChange={(newcrop)=>updatecrop(newcrop)}/> \r\n                                <div style={{textAlign:\"center\"}}>\r\n                                 <Button onClick={()=>Upload()} color=\"secondary\" variant=\"contained\" >Upload the file to server</Button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        :\r\n\r\n                             (<> \r\n                                <Background ImageforBack={\"\"}>\r\n                                    <Labelimage  htmlFor=\"file\"></Labelimage>\r\n                                    <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                    <input onChange={(e)=>Updatefile(e,\"back\")} name=\"upload\" accept=\"image/png, image/gif, image/jpeg\" id=\"file\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                </Background>\r\n                                <ProfileImageholder>\r\n                                    <Porfileimage style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} width=\"80px\" height=\"80px\" profile={image}>\r\n                                        <Labelimage htmlFor=\"file2\"></Labelimage>\r\n                                        <CameraAlt style={{color:\"white\"}}></CameraAlt>\r\n                                        <input onChange={(e)=>Updatefile(e,\"profile\")} accept=\"image/png, image/gif, image/jpeg\" id=\"file2\" type=\"file\" style={{display:\"none\"}}></input>\r\n                                    </Porfileimage>\r\n                                </ProfileImageholder>\r\n                                <Information>\r\n                                    {\r\n                                        Object.keys(userinfo).map((item,index)=>{\r\n\r\n                                            return (<Inputholder>\r\n                                                        <TextField\r\n                                                        multiline={userinfo[item].multiline}\r\n                                                        rows={4}\r\n                                                        onChange={(e)=>Inputhandler(item,e)}\r\n                                                        style={{width:\"100%\"}}\r\n                                                        label={userinfo[item].label}\r\n                                                        variant=\"outlined\"\r\n                                                        value={userinfo[item].value}\r\n                                                        ></TextField>\r\n                                                </Inputholder>)\r\n                                        })\r\n                                    }\r\n                                </Information>\r\n                        </>)\r\n                    }\r\n                       \r\n        \r\n                </Inner>\r\n            </Exterior>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}